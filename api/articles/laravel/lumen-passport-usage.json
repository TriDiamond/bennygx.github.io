{"title":"Lumen 使用 laravel passport","uid":"856e8266ee6e8a15c82abdb9b8c2a650","slug":"laravel/lumen-passport-usage","date":"2019-01-10T01:51:23.000Z","updated":"2021-03-29T15:37:21.171Z","comments":true,"path":"api/articles/laravel/lumen-passport-usage.json","excerpt":"","keywords":null,"cover":"https://res.cloudinary.com/tridiamond/image/upload/v1571213684/blog/lumn_cover_uujop9.png","content":"<p>Lumen是laravel的简洁版, 把laravel里面深重的依赖都去掉了, 所以直接安装laravel的passport是无法正常使用的.<br>所以如果要在lumen上使用laravel的passport就需要安装另外一个插件.</p>\n<h2 id=\"安装要求\"><a href=\"#安装要求\" class=\"headerlink\" title=\"安装要求\"></a>安装要求</h2><ul>\n<li>PHP &gt;= 5.6.3</li>\n<li>Lumen &gt;= 5.3</li>\n</ul>\n<h2 id=\"Composer安装lumen-passport插件\"><a href=\"#Composer安装lumen-passport插件\" class=\"headerlink\" title=\"Composer安装lumen-passport插件\"></a>Composer安装lumen-passport插件</h2><p>首先安装 Lumen Passport</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 进入项目根目录</span>\n$ <span class=\"token builtin class-name\">cd</span> lumen-app\n\n<span class=\"token comment\"># 使用composer安装插件</span>\n$ <span class=\"token function\">composer</span> require dusterio/lumen-passport<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"修改-bootstrap-bootstrap-app-php\"><a href=\"#修改-bootstrap-bootstrap-app-php\" class=\"headerlink\" title=\"修改 bootstrap (bootstrap/app.php)\"></a>修改 bootstrap (bootstrap/app.php)</h2><p>需要引入Laravel Passport的provider和Lumen的一些provider</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">// 开启 Facades</span>\n<span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token function\">withFacades</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 开启 Eloquent</span>\n<span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token function\">withEloquent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 开启 auth 中间件</span>\n<span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token function\">routeMiddleware</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'auth'</span> <span class=\"token operator\">=></span> <span class=\"token class-name class-name-fully-qualified static-context\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>Authenticate</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 注册laravel passport的provider和lumen passport的provider</span>\n<span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token class-name class-name-fully-qualified static-context\">Laravel<span class=\"token punctuation\">\\</span>Passport<span class=\"token punctuation\">\\</span>PassportServiceProvider</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token class-name class-name-fully-qualified static-context\">Dusterio<span class=\"token punctuation\">\\</span>LumenPassport<span class=\"token punctuation\">\\</span>PassportServiceProvider</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"数据表移植和安装Laravel-Passport\"><a href=\"#数据表移植和安装Laravel-Passport\" class=\"headerlink\" title=\"数据表移植和安装Laravel Passport\"></a>数据表移植和安装Laravel Passport</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 移植passport的数据表</span>\nphp artisan migrate\n\n<span class=\"token comment\"># 安装passport需要的配置</span>\nphp artisan passport:install<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Lumen-Passport自带的路由\"><a href=\"#Lumen-Passport自带的路由\" class=\"headerlink\" title=\"Lumen Passport自带的路由\"></a>Lumen Passport自带的路由</h2><p>这个lumen-passport包已经引入了一下路由, 但是与web相关的路由因为lumen是没有web的路由的, 只有api的, 所以这个插件已经把web端的路由都去掉了.</p>\n<table>\n<thead>\n<tr>\n<th>Verb</th>\n<th>Path</th>\n<th>NamedRoute</th>\n<th>Controller</th>\n<th>Action</th>\n<th>Middleware</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>POST</td>\n<td>/oauth/token</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\AccessTokenController</td>\n<td>issueToken</td>\n<td>-</td>\n</tr>\n<tr>\n<td>GET</td>\n<td>/oauth/tokens</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\AuthorizedAccessTokenController</td>\n<td>forUser</td>\n<td>auth</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>/oauth/tokens/{token_id}</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\AuthorizedAccessTokenController</td>\n<td>destroy</td>\n<td>auth</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>/oauth/token/refresh</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\TransientTokenController</td>\n<td>refresh</td>\n<td>auth</td>\n</tr>\n<tr>\n<td>GET</td>\n<td>/oauth/clients</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\ClientController</td>\n<td>forUser</td>\n<td>auth</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>/oauth/clients</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\ClientController</td>\n<td>store</td>\n<td>auth</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>/oauth/clients/{client_id}</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\ClientController</td>\n<td>update</td>\n<td>auth</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>/oauth/clients/{client_id}</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\ClientController</td>\n<td>destroy</td>\n<td>auth</td>\n</tr>\n<tr>\n<td>GET</td>\n<td>/oauth/scopes</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\ScopeController</td>\n<td>all</td>\n<td>auth</td>\n</tr>\n<tr>\n<td>GET</td>\n<td>/oauth/personal-access-tokens</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\PersonalAccessTokenController</td>\n<td>forUser</td>\n<td>auth</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>/oauth/personal-access-tokens</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\PersonalAccessTokenController</td>\n<td>store</td>\n<td>auth</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>/oauth/personal-access-tokens/{token_id}</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\PersonalAccessTokenController</td>\n<td>destroy</td>\n<td>auth</td>\n</tr>\n</tbody></table>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>修改 <code>config/auth.php</code> 里面的配置, 按照项目需要修改. 下面是一个简单的例子</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'defaults'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'guard'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'api'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'passwords'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'users'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token string single-quoted-string\">'guards'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'api'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string single-quoted-string\">'driver'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'passport'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'provider'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'users'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token string single-quoted-string\">'providers'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'users'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string single-quoted-string\">'driver'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'eloquent'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'model'</span> <span class=\"token operator\">=></span> <span class=\"token class-name class-name-fully-qualified static-context\"><span class=\"token punctuation\">\\</span>App<span class=\"token punctuation\">\\</span>User</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>需要在 <code>vendor\\laravel\\lumen-framework\\config\\auth.php</code> 复制到项目根目录下的<code>config</code>文件夹里面, 如果没有config文件夹, 需要手动添加一个.</p>\n<p>然后在<code>bootstrap/app.php</code>最前面加入配置应用, 因为lumen是不自动引入config里面的配置的.</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'auth'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"注册路由\"><a href=\"#注册路由\" class=\"headerlink\" title=\"注册路由\"></a>注册路由</h2><p>需要在<code>Provider\\AuthServiceProviders.php</code>里面的<code>boot</code>方法里面注册路由</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">/**\n* Boot the authentication services for the application.\n*\n* @return void\n*/</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">boot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// Here you may define how you wish users to be authenticated for your Lumen</span>\n    <span class=\"token comment\">// application. The callback which receives the incoming request instance</span>\n    <span class=\"token comment\">// should return either a User instance or null. You're free to obtain</span>\n    <span class=\"token comment\">// the User instance via an API token or any other method necessary.</span>\n\n    <span class=\"token class-name static-context\">LumenPassport</span><span class=\"token operator\">::</span><span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">app</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 注册路由</span>\n\n    <span class=\"token class-name static-context\">LumenPassport</span><span class=\"token operator\">::</span><span class=\"token function\">tokensExpireIn</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Carbon</span><span class=\"token operator\">::</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">addDays</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name static-context\">LumenPassport</span><span class=\"token operator\">::</span><span class=\"token function\">refreshTokensExpireIn</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Carbon</span><span class=\"token operator\">::</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">addDays</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>简单路由注册</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token class-name class-name-fully-qualified static-context\">Dusterio<span class=\"token punctuation\">\\</span>LumenPassport<span class=\"token punctuation\">\\</span>LumenPassport</span><span class=\"token operator\">::</span><span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">app</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>通用版本控制的路由</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token class-name class-name-fully-qualified static-context\">Dusterio<span class=\"token punctuation\">\\</span>LumenPassport<span class=\"token punctuation\">\\</span>LumenPassport</span><span class=\"token operator\">::</span><span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">app</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'prefix'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'v1/oauth'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"用户模型\"><a href=\"#用户模型\" class=\"headerlink\" title=\"用户模型\"></a>用户模型</h2><p>需要在用户模型里面加入<code>HasApiTokens</code>的trait, 例子:</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> User <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Model</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">AuthenticatableContract</span><span class=\"token punctuation\">,</span> AuthorizableContract\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">use</span> <span class=\"token package\">HasApiTokens</span><span class=\"token punctuation\">,</span> Authenticatable<span class=\"token punctuation\">,</span> Authorizable<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/* rest of the model */</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>其他的详细文档可以查看lumen-passport的插件<a href=\"https://github.com/dusterio/lumen-passport\">github</a></p>\n","feature":null,"text":"Lumen是laravel的简洁版, 把laravel里面深重的依赖都去掉了, 所以直接安装laravel的passport是无法正常使用的.所以如果要在lumen上使用laravel的passport就需要安装另外一个插件. 安装要求 PHP &gt;= 5.6.3 Lumen...","link":"","raw":"---\ntitle: Lumen 使用 laravel passport\ndate: 2019-01-10 01:51:23\ncategories:\n  - Laravel\ntags:\n  - Lumen\n  - Laravel Passport\ncover: https://res.cloudinary.com/tridiamond/image/upload/v1571213684/blog/lumn_cover_uujop9.png\n---\n\nLumen是laravel的简洁版, 把laravel里面深重的依赖都去掉了, 所以直接安装laravel的passport是无法正常使用的. \n所以如果要在lumen上使用laravel的passport就需要安装另外一个插件.\n\n## 安装要求\n\n- PHP >= 5.6.3\n- Lumen >= 5.3\n\n## Composer安装lumen-passport插件\n\n首先安装 Lumen Passport\n\n```bash\n# 进入项目根目录\n$ cd lumen-app\n\n# 使用composer安装插件\n$ composer require dusterio/lumen-passport\n```\n\n## 修改 bootstrap (bootstrap/app.php)\n\n需要引入Laravel Passport的provider和Lumen的一些provider\n\n```php\n// 开启 Facades\n$app->withFacades();\n\n// 开启 Eloquent\n$app->withEloquent();\n\n// 开启 auth 中间件\n$app->routeMiddleware([\n    'auth' => App\\Http\\Middleware\\Authenticate::class,\n]);\n\n// 注册laravel passport的provider和lumen passport的provider\n$app->register(Laravel\\Passport\\PassportServiceProvider::class);\n$app->register(Dusterio\\LumenPassport\\PassportServiceProvider::class);\n```\n## 数据表移植和安装Laravel Passport\n\n```bash\n# 移植passport的数据表\nphp artisan migrate\n\n# 安装passport需要的配置\nphp artisan passport:install\n```\n\n## Lumen Passport自带的路由\n\n这个lumen-passport包已经引入了一下路由, 但是与web相关的路由因为lumen是没有web的路由的, 只有api的, 所以这个插件已经把web端的路由都去掉了.\n\nVerb | Path | NamedRoute | Controller | Action | Middleware\n--- | --- | --- | --- | --- | ---\nPOST   | /oauth/token                             |            | \\Laravel\\Passport\\Http\\Controllers\\AccessTokenController           | issueToken | -\nGET    | /oauth/tokens                            |            | \\Laravel\\Passport\\Http\\Controllers\\AuthorizedAccessTokenController | forUser    | auth\nDELETE | /oauth/tokens/{token_id}                 |            | \\Laravel\\Passport\\Http\\Controllers\\AuthorizedAccessTokenController | destroy    | auth\nPOST   | /oauth/token/refresh                     |            | \\Laravel\\Passport\\Http\\Controllers\\TransientTokenController        | refresh    | auth\nGET    | /oauth/clients                           |            | \\Laravel\\Passport\\Http\\Controllers\\ClientController                | forUser    | auth\nPOST   | /oauth/clients                           |            | \\Laravel\\Passport\\Http\\Controllers\\ClientController                | store      | auth\nPUT    | /oauth/clients/{client_id}               |            | \\Laravel\\Passport\\Http\\Controllers\\ClientController                | update     | auth\nDELETE | /oauth/clients/{client_id}               |            | \\Laravel\\Passport\\Http\\Controllers\\ClientController                | destroy    | auth\nGET    | /oauth/scopes                            |            | \\Laravel\\Passport\\Http\\Controllers\\ScopeController                 | all        | auth\nGET    | /oauth/personal-access-tokens            |            | \\Laravel\\Passport\\Http\\Controllers\\PersonalAccessTokenController   | forUser    | auth\nPOST   | /oauth/personal-access-tokens            |            | \\Laravel\\Passport\\Http\\Controllers\\PersonalAccessTokenController   | store      | auth\nDELETE | /oauth/personal-access-tokens/{token_id} |            | \\Laravel\\Passport\\Http\\Controllers\\PersonalAccessTokenController   | destroy    | auth\n\n## 配置\n\n修改 `config/auth.php` 里面的配置, 按照项目需要修改. 下面是一个简单的例子\n\n```php\nreturn [\n    'defaults' => [\n        'guard' => 'api',\n        'passwords' => 'users',\n    ],\n\n    'guards' => [\n        'api' => [\n            'driver' => 'passport',\n            'provider' => 'users',\n        ],\n    ],\n\n    'providers' => [\n        'users' => [\n            'driver' => 'eloquent',\n            'model' => \\App\\User::class\n        ]\n    ]\n];\n```\n\n需要在 `vendor\\laravel\\lumen-framework\\config\\auth.php` 复制到项目根目录下的`config`文件夹里面, 如果没有config文件夹, 需要手动添加一个.\n\n然后在`bootstrap/app.php`最前面加入配置应用, 因为lumen是不自动引入config里面的配置的.\n\n```php\n$app->configure('auth');\n```\n\n## 注册路由\n\n需要在`Provider\\AuthServiceProviders.php`里面的`boot`方法里面注册路由\n\n```php\n/**\n* Boot the authentication services for the application.\n*\n* @return void\n*/\npublic function boot()\n{\n    // Here you may define how you wish users to be authenticated for your Lumen\n    // application. The callback which receives the incoming request instance\n    // should return either a User instance or null. You're free to obtain\n    // the User instance via an API token or any other method necessary.\n\n    LumenPassport::routes($this->app); // 注册路由\n\n    LumenPassport::tokensExpireIn(Carbon::now()->addDays(7));\n\n    LumenPassport::refreshTokensExpireIn(Carbon::now()->addDays(30));\n}\n```\n\n简单路由注册\n\n```php\nDusterio\\LumenPassport\\LumenPassport::routes($this->app);\n```\n\n通用版本控制的路由\n\n```php\nDusterio\\LumenPassport\\LumenPassport::routes($this->app, ['prefix' => 'v1/oauth']);\n```\n\n## 用户模型\n\n需要在用户模型里面加入`HasApiTokens`的trait, 例子:\n\n```php\nclass User extends Model implements AuthenticatableContract, AuthorizableContract\n{\n    use HasApiTokens, Authenticatable, Authorizable;\n\n    /* rest of the model */\n}\n```\n\n## 其他\n\n其他的详细文档可以查看lumen-passport的插件[github](https://github.com/dusterio/lumen-passport)\n","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"Laravel","slug":"Laravel","count":3,"path":"api/categories/Laravel.json"}],"tags":[{"name":"Laravel Passport","slug":"Laravel-Passport","count":3,"path":"api/tags/Laravel-Passport.json"},{"name":"Lumen","slug":"Lumen","count":2,"path":"api/tags/Lumen.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">安装要求</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Composer%E5%AE%89%E8%A3%85lumen-passport%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">Composer安装lumen-passport插件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9-bootstrap-bootstrap-app-php\"><span class=\"toc-text\">修改 bootstrap (bootstrap&#x2F;app.php)</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%A7%BB%E6%A4%8D%E5%92%8C%E5%AE%89%E8%A3%85Laravel-Passport\"><span class=\"toc-text\">数据表移植和安装Laravel Passport</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Lumen-Passport%E8%87%AA%E5%B8%A6%E7%9A%84%E8%B7%AF%E7%94%B1\"><span class=\"toc-text\">Lumen Passport自带的路由</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">配置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E5%86%8C%E8%B7%AF%E7%94%B1\"><span class=\"toc-text\">注册路由</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%88%B7%E6%A8%A1%E5%9E%8B\"><span class=\"toc-text\">用户模型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96\"><span class=\"toc-text\">其他</span></a></li></ol>","author":{"name":"三钻","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":""},"mapped":true,"prev_post":{"title":"GitLab Webhook 自动部署","uid":"0e4eed29bacbb07352028a3973ca9ed9","slug":"server/aliyun-webhook-setup","date":"2019-09-10T01:51:23.000Z","updated":"2021-03-29T15:37:21.171Z","comments":true,"path":"api/articles/server/aliyun-webhook-setup.json","keywords":null,"cover":"https://s2.ax1x.com/2019/09/18/n7ku11.png","text":"创建与填写部署公钥创建部署公钥sudo -Hu www ssh-keygen -t rsa 如果创建失败首先需要创建/home/www/.ssh 这个文件夹 查看公钥cat /home/www/.ssh/id_rsa.pub ```·· ### 添加 Hook 在阿里云 code...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"运维","slug":"运维","count":1,"path":"api/categories/运维.json"}],"tags":[{"name":"Gitlab","slug":"Gitlab","count":1,"path":"api/tags/Gitlab.json"},{"name":"Webhook","slug":"Webhook","count":1,"path":"api/tags/Webhook.json"}],"author":{"name":"三钻","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":""}},"next_post":{"title":"Lumen passport实现多个用户体系下的oauth验证","uid":"44e4c38c8d84ec4aadd2af71d96fa2b0","slug":"laravel/lumen-multi-oauth","date":"2019-01-10T01:40:41.000Z","updated":"2021-03-29T15:37:21.171Z","comments":true,"path":"api/articles/laravel/lumen-multi-oauth.json","keywords":null,"cover":"https://res.cloudinary.com/tridiamond/image/upload/v1571213684/blog/lumn_cover_uujop9.png","text":"这个教程是基于, lumen里面已经安装好了lumen-passport的插件, 如果还没有的话可以先到lumen使用laravel passport教程先安装. 改写Laravel Passport里面的UserRepository 文件路径 vendor\\laravel\\pa...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"Laravel","slug":"Laravel","count":3,"path":"api/categories/Laravel.json"}],"tags":[{"name":"Laravel Passport","slug":"Laravel-Passport","count":3,"path":"api/tags/Laravel-Passport.json"},{"name":"Lumen","slug":"Lumen","count":2,"path":"api/tags/Lumen.json"}],"author":{"name":"三钻","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":""}}}