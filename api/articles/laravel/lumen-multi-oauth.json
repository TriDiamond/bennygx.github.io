{"title":"Lumen passport实现多个用户体系下的oauth验证","uid":"44e4c38c8d84ec4aadd2af71d96fa2b0","slug":"laravel/lumen-multi-oauth","date":"2019-01-10T01:40:41.000Z","updated":"2021-03-30T14:09:35.066Z","comments":true,"path":"api/articles/laravel/lumen-multi-oauth.json","excerpt":"","keywords":null,"cover":"https://res.cloudinary.com/tridiamond/image/upload/v1571213684/blog/lumn_cover_uujop9.png","content":"<p>这个教程是基于, lumen里面已经安装好了lumen-passport的插件, 如果还没有的话可以先到<a href=\"/2019/01/10/2019-01-10-lumen-passport-usage/\">lumen使用laravel passport教程</a>先安装.</p>\n<h2 id=\"改写Laravel-Passport里面的UserRepository\"><a href=\"#改写Laravel-Passport里面的UserRepository\" class=\"headerlink\" title=\"改写Laravel Passport里面的UserRepository\"></a>改写Laravel Passport里面的<code>UserRepository</code></h2><blockquote>\n<p>文件路径 <code>vendor\\laravel\\passport\\src\\Bridge\\UserRepository.php</code></p>\n</blockquote>\n<ul>\n<li><p>首先需要改写<code>userRepositroy</code>里面的<code>getUserEntityByUserCredentials</code>方法</p>\n</li>\n<li><p>复制<code>userRepositroy</code>里面的<code>getUserEntityByUserCredentials</code>方法, 改名为<code>getEntityByUserCredentials</code></p>\n</li>\n<li><p>在新建的方法里面找到一下代码</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$provider</span> <span class=\"token operator\">=</span> <span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'auth.guards.api.provider'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>改成一下样子</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$provider</span> <span class=\"token operator\">=</span> <span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'auth.guards.'</span><span class=\"token operator\">.</span><span class=\"token variable\">$provider</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'.provider'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>然后在新的方法<code>getEntityByUserCredentials</code>的参数里面添加新的参数<code>$provider</code></li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getEntityByUserCredentials</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$grantType</span><span class=\"token punctuation\">,</span> \n  <span class=\"token class-name type-declaration\">ClientEntityInterface</span> <span class=\"token variable\">$clientEntity</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$provider</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//...</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"修改oauth2-server里面的PasswordGrand\"><a href=\"#修改oauth2-server里面的PasswordGrand\" class=\"headerlink\" title=\"修改oauth2-server里面的PasswordGrand\"></a>修改oauth2-server里面的PasswordGrand</h2><blockquote>\n<p>文件路径 <code>vendor\\league\\oauth2-server\\src\\Grant\\PasswordGrant.php</code></p>\n</blockquote>\n<ul>\n<li>修改<code>validateUser</code>方法里面的这一串代码:</li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">userRepository</span><span class=\"token operator\">-></span><span class=\"token function\">getEntityByUserCredentials</span><span class=\"token punctuation\">(</span>\n    <span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span>\n    <span class=\"token variable\">$password</span><span class=\"token punctuation\">,</span>\n    <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">getIdentifier</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token variable\">$client</span><span class=\"token punctuation\">,</span>\n    <span class=\"token variable\">$provider</span> <span class=\"token comment\">// 新加的provider字段</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>在同一个方法里面加入新参数的获取</li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$provider</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">getRequestParameter</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'provider'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_null</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$provider</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token keyword\">throw</span> <span class=\"token class-name static-context\">OAuthServerException</span><span class=\"token operator\">::</span><span class=\"token function\">invalidRequest</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'provider'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"在auth-php配置里面加入新的guard\"><a href=\"#在auth-php配置里面加入新的guard\" class=\"headerlink\" title=\"在auth.php配置里面加入新的guard\"></a>在auth.php配置里面加入新的guard</h2><p>首先需要加入新的guard配置</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token string single-quoted-string\">'guards'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// 原有的api guard</span>\n    <span class=\"token string single-quoted-string\">'api'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'driver'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'passport'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'provider'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'users'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 新加的admin-api guard</span>\n    <span class=\"token string single-quoted-string\">'admin-api'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'driver'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'passport'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'provider'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'admins'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>添加新<code>admin-api</code> guard的provider</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token string single-quoted-string\">'providers'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'users'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'driver'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'eloquent'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'model'</span> <span class=\"token operator\">=></span> <span class=\"token class-name class-name-fully-qualified static-context\"><span class=\"token punctuation\">\\</span>App<span class=\"token punctuation\">\\</span>Models<span class=\"token punctuation\">\\</span>General<span class=\"token punctuation\">\\</span>MemberLogin</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 新加的admins provider对应不用的用户模型</span>\n    <span class=\"token string single-quoted-string\">'admins'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'driver'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'eloquent'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'model'</span> <span class=\"token operator\">=></span> <span class=\"token class-name class-name-fully-qualified static-context\"><span class=\"token punctuation\">\\</span>App<span class=\"token punctuation\">\\</span>Models<span class=\"token punctuation\">\\</span>Backend<span class=\"token punctuation\">\\</span>Manager</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"路由middleware使用\"><a href=\"#路由middleware使用\" class=\"headerlink\" title=\"路由middleware使用\"></a>路由middleware使用</h2><p>区别在于middleware, 上文加入的新<code>admin-api</code>guard, 在新的路由里面就可以使用<code>auth:admin-api</code>的权限验证中间件理实现权限控制了!</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">/*\n|--------------------------------------------------------------------------\n| Admin API版本 v1 路由\n|--------------------------------------------------------------------------.\n|\n| prefix admin/api/api版本号\n| namespace Api\\api版本号\n|\n*/</span>\n<span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'prefix'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'admin/api/v1'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'namespace'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'AdminApi\\V1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$app</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token comment\">// ================ 不受登录权限控制的接口路由 ================ //</span>\n    <span class=\"token comment\">//测试</span>\n    <span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'ExampleController@test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ================ 受登录权限控制的接口路由 ================ //</span>\n    <span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'middleware'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'auth:admin-api'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$app</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//测试</span>\n        <span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'test2'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string single-quoted-string\">'oauth test'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//测试</span>\n        <span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'test3'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'ExampleController@test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><p>使用了多个guard的时候, 在使用laravel默认的<code>$request-&gt;user()</code>, 这个方法默认是使用<code>api</code>guard的, 可以在<code>auth.php</code>配置里面看到默认guard的配置.</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">/*\n|--------------------------------------------------------------------------\n| Authentication Defaults\n|--------------------------------------------------------------------------\n|\n| This option controls the default authentication \"guard\" and password\n| reset options for your application. You may change these defaults\n| as required, but they're a perfect start for most applications.\n|\n*/</span>\n\n<span class=\"token string single-quoted-string\">'defaults'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'guard'</span> <span class=\"token operator\">=></span> <span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'AUTH_GUARD'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'api'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'passwords'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'users'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>所以在使用新的<code>admin-api</code> guard的时候在使用<code>$request-&gt;user()</code>时需要加入对应的guard. 例子:</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Controllers<span class=\"token punctuation\">\\</span>AdminApi<span class=\"token punctuation\">\\</span>V1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Controllers<span class=\"token punctuation\">\\</span>Controller</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Request</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Support<span class=\"token punctuation\">\\</span>Facades<span class=\"token punctuation\">\\</span>Cache</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Controller</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Request</span> <span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$request</span><span class=\"token operator\">-></span><span class=\"token function\">user</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'admin-api'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取到admin-api下的用户信息</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","feature":null,"text":"这个教程是基于, lumen里面已经安装好了lumen-passport的插件, 如果还没有的话可以先到lumen使用laravel passport教程先安装. 改写Laravel Passport里面的UserRepository 文件路径 vendor\\laravel\\pa...","link":"","raw":"---\ntitle: Lumen passport实现多个用户体系下的oauth验证\ndate: 2019-01-10 01:40:41\nabstract: 手把手教你在Lumen的Passport实现多个用户体系下使用多个Oauth验证\nheader_image: /assets/images/lumen-banner.png\ncategories:\n  - Laravel\ntags:\n  - Lumen\n  - Laravel Passport\ncover: https://res.cloudinary.com/tridiamond/image/upload/v1571213684/blog/lumn_cover_uujop9.png\n---\n\n这个教程是基于, lumen里面已经安装好了lumen-passport的插件, 如果还没有的话可以先到[lumen使用laravel passport教程](/2019/01/10/2019-01-10-lumen-passport-usage/)先安装.\n\n## 改写Laravel Passport里面的`UserRepository`\n\n> 文件路径 `vendor\\laravel\\passport\\src\\Bridge\\UserRepository.php`\n\n- 首先需要改写`userRepositroy`里面的`getUserEntityByUserCredentials`方法\n\n- 复制`userRepositroy`里面的`getUserEntityByUserCredentials`方法, 改名为`getEntityByUserCredentials`\n\n- 在新建的方法里面找到一下代码\n\n```php\n$provider = config('auth.guards.api.provider');\n```\n\n改成一下样子\n\n```php\n$provider = config('auth.guards.'.$provider.'.provider');\n```\n\n- 然后在新的方法`getEntityByUserCredentials`的参数里面添加新的参数`$provider`\n\n```php\npublic function getEntityByUserCredentials($username, $password, $grantType, \n  ClientEntityInterface $clientEntity, $provider) {\n      //...\n}\n```\n\n## 修改oauth2-server里面的PasswordGrand\n\n> 文件路径 `vendor\\league\\oauth2-server\\src\\Grant\\PasswordGrant.php`\n\n- 修改`validateUser`方法里面的这一串代码:\n\n```php\n$user = $this->userRepository->getEntityByUserCredentials(\n    $username,\n    $password,\n    $this->getIdentifier(),\n    $client,\n    $provider // 新加的provider字段\n);\n```\n\n- 在同一个方法里面加入新参数的获取\n\n```php\n $provider = $this->getRequestParameter('provider', $request);\n\n if (is_null($provider)) {\n throw OAuthServerException::invalidRequest('provider');\n }\n```\n\n## 在auth.php配置里面加入新的guard\n\n首先需要加入新的guard配置\n\n```php\n'guards' => [\n    // 原有的api guard\n    'api' => [\n        'driver' => 'passport',\n        'provider' => 'users',\n    ],\n    // 新加的admin-api guard\n    'admin-api' => [\n        'driver' => 'passport',\n        'provider' => 'admins',\n    ],\n],\n```\n\n添加新`admin-api` guard的provider\n\n```php\n'providers' => [\n    'users' => [\n        'driver' => 'eloquent',\n        'model' => \\App\\Models\\General\\MemberLogin::class\n    ],\n    // 新加的admins provider对应不用的用户模型\n    'admins' => [\n        'driver' => 'eloquent',\n        'model' => \\App\\Models\\Backend\\Manager::class\n    ]\n],\n```\n\n## 路由middleware使用\n\n区别在于middleware, 上文加入的新`admin-api`guard, 在新的路由里面就可以使用`auth:admin-api`的权限验证中间件理实现权限控制了!\n\n```php\n/*\n|--------------------------------------------------------------------------\n| Admin API版本 v1 路由\n|--------------------------------------------------------------------------.\n|\n| prefix admin/api/api版本号\n| namespace Api\\api版本号\n|\n*/\n$app->group(['prefix' => 'admin/api/v1', 'namespace' => 'AdminApi\\V1'], function ($app) {\n\n    // ================ 不受登录权限控制的接口路由 ================ //\n    //测试\n    $app->get('test', 'ExampleController@test');\n\n    // ================ 受登录权限控制的接口路由 ================ //\n    $app->group(['middleware' => 'auth:admin-api'], function ($app) {\n        //测试\n        $app->get('test2', function(){\n            return 'oauth test';\n        });\n        //测试\n        $app->get('test3', 'ExampleController@test');\n    });\n\n});\n```\n\n## 注意事项\n\n使用了多个guard的时候, 在使用laravel默认的`$request->user()`, 这个方法默认是使用`api`guard的, 可以在`auth.php`配置里面看到默认guard的配置.\n\n```php\n/*\n|--------------------------------------------------------------------------\n| Authentication Defaults\n|--------------------------------------------------------------------------\n|\n| This option controls the default authentication \"guard\" and password\n| reset options for your application. You may change these defaults\n| as required, but they're a perfect start for most applications.\n|\n*/\n\n'defaults' => [\n    'guard' => env('AUTH_GUARD', 'api'),\n    'passwords' => 'users',\n],\n```\n\n所以在使用新的`admin-api` guard的时候在使用`$request->user()`时需要加入对应的guard. 例子:\n\n```php\nnamespace App\\Http\\Controllers\\AdminApi\\V1;\n\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Cache;\n\nclass ExampleController extends Controller\n{\n    public function test(Request $request)\n    {\n        $request->user('admin-api')->toArray(); // 获取到admin-api下的用户信息\n    }\n}\n```\n\n","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"Laravel","slug":"Laravel","count":3,"path":"api/categories/Laravel.json"}],"tags":[{"name":"Laravel Passport","slug":"Laravel-Passport","count":3,"path":"api/tags/Laravel-Passport.json"},{"name":"Lumen","slug":"Lumen","count":2,"path":"api/tags/Lumen.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%94%B9%E5%86%99Laravel-Passport%E9%87%8C%E9%9D%A2%E7%9A%84UserRepository\"><span class=\"toc-text\">改写Laravel Passport里面的UserRepository</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9oauth2-server%E9%87%8C%E9%9D%A2%E7%9A%84PasswordGrand\"><span class=\"toc-text\">修改oauth2-server里面的PasswordGrand</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%A8auth-php%E9%85%8D%E7%BD%AE%E9%87%8C%E9%9D%A2%E5%8A%A0%E5%85%A5%E6%96%B0%E7%9A%84guard\"><span class=\"toc-text\">在auth.php配置里面加入新的guard</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B7%AF%E7%94%B1middleware%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">路由middleware使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\"><span class=\"toc-text\">注意事项</span></a></li></ol>","author":{"name":"三钻","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":""},"mapped":true,"prev_post":{"title":"Lumen 使用 laravel passport","uid":"856e8266ee6e8a15c82abdb9b8c2a650","slug":"laravel/lumen-passport-usage","date":"2019-01-10T01:51:23.000Z","updated":"2021-03-30T14:09:35.066Z","comments":true,"path":"api/articles/laravel/lumen-passport-usage.json","keywords":null,"cover":"https://res.cloudinary.com/tridiamond/image/upload/v1571213684/blog/lumn_cover_uujop9.png","text":"Lumen是laravel的简洁版, 把laravel里面深重的依赖都去掉了, 所以直接安装laravel的passport是无法正常使用的.所以如果要在lumen上使用laravel的passport就需要安装另外一个插件. 安装要求 PHP &gt;= 5.6.3 Lumen...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"Laravel","slug":"Laravel","count":3,"path":"api/categories/Laravel.json"}],"tags":[{"name":"Laravel Passport","slug":"Laravel-Passport","count":3,"path":"api/tags/Laravel-Passport.json"},{"name":"Lumen","slug":"Lumen","count":2,"path":"api/tags/Lumen.json"}],"author":{"name":"三钻","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":""}},"next_post":{"title":"IONIC 2 实现首页双击退出APP","uid":"b9c619014fc7379786141900ce0e39ef","slug":"ionic/listen-to-back-button","date":"2017-04-24T00:00:00.000Z","updated":"2021-03-30T14:09:35.066Z","comments":true,"path":"api/articles/ionic/listen-to-back-button.json","keywords":null,"cover":"https://res.cloudinary.com/tridiamond/image/upload/v1571186961/blog/ionic_cover_hvzkwo.png","text":"添加绑定值 首先在app/app.html下加入#myNav, 这个是用于绑定当前页面的导航标签 &lt;ion-nav #myNav [root]=\"rootPage\">&lt;/ion-nav> 代码实现 然后在app.component.ts做相对的改动 import &#...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"Ionic","slug":"Ionic","count":6,"path":"api/categories/Ionic.json"}],"tags":[{"name":"Ionic 2","slug":"Ionic-2","count":3,"path":"api/tags/Ionic-2.json"},{"name":"Hybird App","slug":"Hybird-App","count":6,"path":"api/tags/Hybird-App.json"},{"name":"Angular 4","slug":"Angular-4","count":4,"path":"api/tags/Angular-4.json"}],"author":{"name":"三钻","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":""}}}