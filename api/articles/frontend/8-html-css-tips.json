{"title":"前端必看的8个HTML+CSS技巧","uid":"020b052a924b8fcc2ed6531b89a7e5d7","slug":"frontend/8-html-css-tips","date":"2020-04-06T21:14:05.000Z","updated":"2021-03-29T15:37:21.167Z","comments":true,"path":"api/articles/frontend/8-html-css-tips.json","excerpt":"","keywords":null,"cover":"https://img-blog.csdnimg.cn/20200401142526736.png","content":"<p>CSS 是一个很独特的语言。看起来非常简单，但是某种特殊效果看似简单，实现起来就颇有难度。这篇文章主要是给在学习前端的童鞋分享一些新的 CSS 技巧，一些在前端教程和培训课堂中不会讲到的知识。第二就是让还在前端开发这条道路上的童鞋们，重新燃起对前端排版和特效的热爱和热情！🔥</p>\n<hr>\n<h1 id=\"一、固定底部内容\"><a href=\"#一、固定底部内容\" class=\"headerlink\" title=\"一、固定底部内容\"></a>一、固定底部内容</h1><p><img src=\"https://img-blog.csdnimg.cn/20200401142526736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70\" alt=\"固定底部内容\"></p>\n<p>这种是一个非常常见的布局方式，但是对于新手来说是比较常见的难题。</p>\n<p>这种布局方式在后台管理系统中比较常见，当我们内容不足浏览器窗口高度时，底部内容需要固定在底部。当内容超出了浏览器窗口高度，就会随着内容往后推。</p>\n<p>在有 CSS3 之前，实现这个效果是颇有难度的。浏览器窗口高度是会根据不同用户打开浏览器的情况，屏幕大小的差异和浏览器的缩放比例而变。我们需要借助 JavaScript 来实时获取浏览器高度进行运算才能实现。虽然说标题是说“固定”底部，但是我们想要的效果不是<code>position: fixed</code>。使用固定定位，在内容高于窗口高度时，就会挡住我们的内容。</p>\n<p>随着 CSS3 的来临，最完美的实现方式是使用<code>Flexbox</code>。实现的关键就是使用不太被关注的<code>flex-grow</code>属性，可以在我们的内容标签元素（比如<code>div</code>）中使用。在我们下面的例子里使用了<code>main</code>标签。</p>\n<hr>\n<p>我来讲解一下实现原理吧。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200401140715577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70\"></p>\n<p><code>flew-grow</code>是用来控制一个 flex 元素相对它同等级 flex 元素的自身可扩充的空间。如果我们使用<code>flex-grow: 0</code>，那这个 flex 元素就完全不会扩展了。所以我们需要把头部和底部之间的内容标签元素设置为<code>flex-grow: 1</code>或者<code>flex-grow: auto</code>，这样内容部分就会自动填充满头部和底部之外的所有空间。</p>\n<p>为了避免底部内容受内容部分扩充空间的影响，我们给<code>footer</code>底部元素<code>flex-shrink: 0</code>属性。<code>flex-shrink</code>的作用与<code>flex-grow</code>是恰恰相反，用来控制 flex 元素收缩的空间，这里我们给了<code>flex-shrink: 0</code>就是为了底部<code>footer</code>的大小不受影响。</p>\n<p>我们直接上 HTML 和 CSS 代码看看是怎么实现的。</p>\n<p>HTML</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>document<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nav</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>头部内容<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nav</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>main</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>可以添加更多内容看看底部的变化哦！<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>main</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>footer</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>底部内容<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>footer</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>CSS</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">#document</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100vh<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">flex-direction</span><span class=\"token punctuation\">:</span> column<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #202020<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> microsoft yahei<span class=\"token punctuation\">,</span> wenquanyi micro hei<span class=\"token punctuation\">,</span> sans-serif <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">nav,\nfooter</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #494949<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">main</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #bdbdbd<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">flex</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">footer</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">flex-shrink</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">*</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">h1,\np</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">nav > h1</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #82fcfd<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-shadow</span><span class=\"token punctuation\">:</span> 1px 1px 4px #00000080<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">footer > h1</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #82fcfd<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-shadow</span><span class=\"token punctuation\">:</span> 1px 1px 4px #00000080<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>🌟<strong>知识点总结：</strong></p>\n<ul>\n<li><strong>flex-grow</strong> — 是用来控制一个 flex 元素相对它同等级 flex 元素的自身可扩充的空间</li>\n<li><strong>flex-shrink</strong> — 作用与<code>flex-grow</code>是恰恰相反，用来控制 flex 元素收缩的空间</li>\n</ul>\n<p><a href=\"http://tridiamond.me/frontend-tutorials/stickyFooter/\"><strong>预览实际效果</strong></a> ｜ <a href=\"https://github.com/TriDiamond/frontend-tutorials/tree/master/stickyFooter\"><strong>GitHub 源码</strong></a> ｜ 喜欢的童鞋 🌟star 一下谢谢</p>\n</blockquote>\n<hr>\n<h1 id=\"二、悬停放大图片特效\"><a href=\"#二、悬停放大图片特效\" class=\"headerlink\" title=\"二、悬停放大图片特效\"></a>二、悬停放大图片特效</h1><p><img src=\"https://img-blog.csdnimg.cn/20200401220041648.gif#pic_center\" alt=\"悬停放大图片特效\"><br>悬停放大图片是一个特别吸引眼球的特效，比较常用于可点击的图片。当用户悬停鼠标在图片上，图片会稍微的放大。</p>\n<p>其实实现这个特效是非常简单的。首先我们需要一个<code>div</code>包裹这<code>img</code>标签，这个包裹层是用来遮挡住图片，当图片放大时不会出现图片超出我们规定的宽高以外。</p>\n<p>首先我们来讲讲<code>div</code>包裹的属性，我们需要给它一个固定的<code>width</code>宽和<code>height</code>高。然后我们必须给予这个元素<code>overflow: hidden</code>属性。让图片放大的时候不会超出这个<code>div</code>元素的宽高。有了这个包裹层，我们就可以编写<code>img</code>的各种效果了。</p>\n<p>我的例子里面用了<code>transform: scale(1,1)</code>作为悬停时的图片特效，这个<code>transform</code>是用于改变任何元素的属性的，然后<code>scale</code>是用于放大（整数就会放大）或者缩小（负数就会缩小）元素的。</p>\n<p>上代码让大家看看：</p>\n<ul>\n<li>html body 中放入</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>img-wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://img-blog.csdnimg.cn/2020032122230564.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>CSS</li>\n</ul>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.img-wrapper</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 1px 4px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">.img-wrapper img</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-webkit-transition</span><span class=\"token punctuation\">:</span> 0.3s linear<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> 0.3s linear<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">.img-wrapper img:hover</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>1.1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">.img-wrapper</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border-box<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 3px solid #000<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果你们想让图片更加炫酷可以加上图片过滤属性<code>filter</code>，让图片变灰或者变深褐色，然后悬停时候出现更加炫酷的颜色变幻。灰化的属性是<code>filter: grayscale(100%);</code>，然后深褐色化的属性是<code>filter: sepia(100%)</code>。其实图片还有很多过滤属性的，大家有兴趣也可以去尝试一下哦！</p>\n<p>加入特殊效果的代码如下：</p>\n<p>HTML</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- 灰度过滤 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>img-wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span>\n    <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>grayscale-img<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://img-blog.csdnimg.cn/2020032211021728.png<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- 深褐色过滤 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>img-wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span>\n    <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sepia-img<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://img-blog.csdnimg.cn/2020032122230564.png<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>CSS</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token comment\">/* ==============\n* 灰度过滤\n* ==============*/</span>\n<span class=\"token selector\">.grayscale-img</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">-webkit-filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">grayscale</span><span class=\"token punctuation\">(</span>100%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">grayscale</span><span class=\"token punctuation\">(</span>100%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">.grayscale-img:hover</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">-webkit-filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">grayscale</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">grayscale</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">/* ==============\n* 深褐色过滤\n* ==============*/</span>\n<span class=\"token selector\">.sepia-img</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">-webkit-filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">sepia</span><span class=\"token punctuation\">(</span>100%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">sepia</span><span class=\"token punctuation\">(</span>100%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">.sepia-img:hover</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">-webkit-filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">sepia</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">sepia</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>🌟<strong>知识总结</strong></p>\n<ul>\n<li><strong>transform</strong> — 用于改变元素</li>\n<li><strong>scale</strong> — 对元素进行放大和缩小</li>\n<li><strong>filter</strong> — 图片过滤器</li>\n<li><strong>grayscale</strong> — 灰度过滤</li>\n<li><strong>sepia</strong> — 深褐色过滤</li>\n</ul>\n<p><a href=\"http://tridiamond.me/frontend-tutorials/zoomOnHoverImage/\"><strong>预览实际效果</strong></a> ｜ <a href=\"https://github.com/TriDiamond/frontend-tutorials/tree/master/zoomOnHoverImage\"><strong>GitHub 源码</strong></a> ｜ 喜欢的童鞋 🌟star 一下谢谢</p>\n</blockquote>\n<hr>\n<h1 id=\"三、瞬间黑暗模式\"><a href=\"#三、瞬间黑暗模式\" class=\"headerlink\" title=\"三、瞬间黑暗模式\"></a>三、瞬间黑暗模式</h1><p><img src=\"https://img-blog.csdnimg.cn/20200402143046993.gif#pic_center\"></p>\n<p>最近微信也逃脱不了黑暗时代的到来，网页也很多都做了黑暗模式的兼容和主题。如果我们在做的一个网站想瞬间实现黑暗模式可以怎么实现呢？</p>\n<p>其实有一个很快的方式，我们可以使用<code>invert</code>和<code>hue-rotate</code>两个 CSS3 过滤器来实现。</p>\n<p><code>filter: invert()</code> — 是从<code>0</code>到<code>1</code>的刻度，<code>1</code>是从白变黑。<br><code>filter: hue-rotate()</code> — 用于改变你元素的颜色，同时或多或少保持原本相同的色系。这个属性的值可以从<code>0deg</code>到<code>360deg</code>。</p>\n<p>在我们页面的<code>body</code>标签上添加这两个属性，我们就可以快速尝试把我们的网站变成”黑暗模式”。这里需要注意的是，如果<code>body</code>和<code>html</code>上没有设置<code>background</code>背景颜色，这个过滤就会不起效了哦。</p>\n<p>CSS 的代码如下：</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">html</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">body</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">invert</span><span class=\"token punctuation\">(</span>1<span class=\"token punctuation\">)</span> <span class=\"token function\">hue-rotate</span><span class=\"token punctuation\">(</span>270deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>实现效果<br><img src=\"https://img-blog.csdnimg.cn/20200401234411899.gif#pic_center\"></p>\n<p>这里我们会发现图片的颜色会受影响，并不是很美观，使用 css 过滤器是无法完美切换黑暗模式的。不过使用 JavaScript 辅助就可以完美的切换黑暗模式。</p>\n<p>最近出了一个 JavaScript 辅助插件叫<code>Darkmode.js</code>。</p>\n<h2 id=\"🌓-Darkmode-js\"><a href=\"#🌓-Darkmode-js\" class=\"headerlink\" title=\"🌓 Darkmode.js\"></a>🌓 Darkmode.js</h2><p>其实<code>Darkmode.js</code>运用的也是 css 里面的一个特性叫<code>mix-blend-mode</code> — “CSS 属性描述了元素的内容应该与元素的直系父元素的内容和元素的背景如何混合“。加上 Javascript 的辅助判断哪些页面上的元素需要黑化的，哪些是不需要黑化的。就会想我们之前那种做法，导致其他不需要黑化的元素，比如图片，受到影响导致颜色出现问题。</p>\n<p>使用<code>Darkmode.js</code>非常简单，只要在脚本里面添加以下代码就可以马上加入一个插件，</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/darkmode-js@1.5.5/lib/darkmode-js.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token comment\">// 这些是这个插件的可配置项：</span>\n  <span class=\"token keyword\">var</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    bottom<span class=\"token operator\">:</span> <span class=\"token string\">'32px'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 定位底部距离 - 默认: '32px'</span>\n    right<span class=\"token operator\">:</span> <span class=\"token string\">'32px'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 定位右边距离 - 默认: '32px'</span>\n    left<span class=\"token operator\">:</span> <span class=\"token string\">'unset'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 定位左边距离 - 默认: 'unset'</span>\n    time<span class=\"token operator\">:</span> <span class=\"token string\">'0.5s'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 默认动画时间: '0.3s'</span>\n    mixColor<span class=\"token operator\">:</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 需要改变的颜色 - 默认: '#fff'</span>\n    backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 背景颜色 - 默认: '#fff'</span>\n    buttonColorDark<span class=\"token operator\">:</span> <span class=\"token string\">'#262728'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 黑暗模式下按钮颜色 - 默认: '#100f2c'</span>\n    buttonColorLight<span class=\"token operator\">:</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 日间模式下按钮颜色 - 默认: '#fff'</span>\n    saveInCookies<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否在cookie保存当前模式 - 默认: true,</span>\n    label<span class=\"token operator\">:</span> <span class=\"token string\">'🌓'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 切换模式按钮图标 - 默认: ''</span>\n    autoMatchOsTheme<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否自动根据系统适应模式 - 默认: true</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">let</span> darkmode <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Darkmode</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n  darkmode<span class=\"token punctuation\">.</span><span class=\"token function\">showWidget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果你不希望用这个插件的默认按钮，你可以在你的 JavaScript 代码中自主控制。我们可以通过<code>.toggle()</code>方法来切换模式，同时可以使用<code>.isActivated()</code>来检测是否已经进入黑暗模式。</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> darkmode <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Darkmode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndarkmode<span class=\"token punctuation\">.</span><span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>darkmode<span class=\"token punctuation\">.</span><span class=\"token function\">isActivated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 如果已经进入黑暗模式会返回 true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>🌟<strong>知识总结</strong></p>\n<ul>\n<li><strong>filter: invert()</strong> — 可以把页面从白变黑，也可以从黑变白。</li>\n<li><strong>filter: hue-rotate()</strong> — 用于改变你元素的颜色，同时或多或少保持原本相同的色系。</li>\n<li><a href=\"https://darkmodejs.learn.uno/\"><strong>Darkmode.js</strong></a> — 瞬间实现黑暗模式。</li>\n</ul>\n<p><strong>Invert 方式黑暗模式：</strong><a href=\"http://tridiamond.me/frontend-tutorials/instantDarkMode/instantDark\">预览实际效果</a> ｜ <a href=\"https://github.com/TriDiamond/frontend-tutorials/tree/master/instantDarkMode/instantDark\">GitHub 源码</a> ｜ 喜欢的童鞋 🌟star 一下谢谢<br><strong>Darkmode.js 黑暗模式：</strong><a href=\"http://tridiamond.me/frontend-tutorials/instantDarkMode/darkmodeJs\">预览实际效果</a> ｜ <a href=\"https://github.com/TriDiamond/frontend-tutorials/tree/master/instantDarkMode/darkmodeJs\">GitHub 源码</a> ｜ 喜欢的童鞋 🌟star 一下谢谢</p>\n</blockquote>\n<hr>\n<h1 id=\"四、自定义列表符号\"><a href=\"#四、自定义列表符号\" class=\"headerlink\" title=\"四、自定义列表符号\"></a>四、自定义列表符号</h1><p><img src=\"https://img-blog.csdnimg.cn/20200402103145722.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70\" alt=\"自定义列表符号\"><br><code>ul</code>，<code>li</code>的无序列表有默认的符号<code>·</code>，但是在很多情况下我们希望可以给这个符号加入自己的样式和颜色，甚至是换成自定义的符号。默认的符号我们是无法做任何的样式处理，而且默认的符号在 CSS 属性里面只有几个选择可以使用，很多情况下都是无法满足我们的设计。</p>\n<p>其实自定义无序列表符号不难，我们只需要使用伪元素<code>::before</code>加<code>content</code>属性就可以实现。</p>\n<p>在我这个例子里面我做了两个任务列表，一个是待处理任务，一个是已完成任务，各自给了不一样的列表符号和颜色。</p>\n<p><strong>实现原理</strong></p>\n<p>一、首先我们禁用了<code>ul</code>的默认符号样式<code>list-style: none</code></p>\n<p>二、在<code>li</code>的<code>:before</code>伪元素上给予<code>content</code>内容值，待处理任务使用<code>🗹</code>，已完成任务<code>li.completed:before</code>使用<code>✔</code></p>\n<p>三、为了展示效果更加好看我分别给了<code>li</code>和<code>li .completed</code>两个不同的颜色</p>\n<p><strong>上代码看看是怎么实现的吧：</strong></p>\n<p><strong>HTML</strong></p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>待处理<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>待办任务1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>待办任务2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>待办任务3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>待办任务4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>待办任务5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>已完成<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>completed<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>完成任务1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>completed<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>完成任务2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>completed<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>完成任务3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>CSS</strong></p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">ul</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">list-style</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 3px solid #000<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 1rem 2rem<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">min-height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 15px 2rem 0 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #323232<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 1px 4px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 8px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">li</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0.3rem 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">li::before</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'🗹 '</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> aqua<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">li.completed::before</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'✔ '</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> greenyellow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">li.completed</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> line-through<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #bdbdbd<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>::before</code>和<code>::after</code>伪元素加<code>content</code>属性可以用来做很多特殊的效果，也是当代前端排版比较常用的“魔法”。说到伪元素的使用，我再给大家说一个比较常用的使用场景。</p>\n<p>在管理后台或者是文章展示中，我们经常可以见到的“面包屑导航”也是用伪元素来插入每个目录中间的符号的。<br><img src=\"https://img-blog.csdnimg.cn/20200402224549741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70\" alt=\"面包屑导航\"><br><strong>实现逻辑</strong></p>\n<p>一、这个导航含有 3 个<code>a</code>标签，首先给每个<code>a</code>标签加入一个伪元素<code>::after</code>，然后在<code>content</code>属性插入<code>/</code>符号。</p>\n<p>二、然后使用<code>a:first-child</code>，这个伪类会选择到第一个<code>a</code>标签，然后使用<code>content</code>属性加入<code>»</code>符号。</p>\n<p>三、因为我们第一步在每个<code>a</code>标签的后面插入了<code>/</code>符号, 所以我们需要在最后一个<code>a</code>标签清除掉。这里我们使用<code>:last-child</code>选择到最后一个<code>a</code>标签，然后用<code>content: &quot; &quot;</code>属性把伪元素的内容清楚掉。</p>\n<p><strong>HTML</strong></p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>breadcrumb<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><span class=\"token punctuation\">></span></span>三钻<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><span class=\"token punctuation\">></span></span>前端<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><span class=\"token punctuation\">></span></span>教程<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>CSS</strong></p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.breadcrumb</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.6rem<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token selector\">.breadcrumb a:first-child</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #82fcfd<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token selector\">.breadcrumb a:first-child::before</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">' » '</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token selector\">.breadcrumb a::after</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">' /'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ef6eae<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token selector\">.breadcrumb a:last-child::after</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>🌟<strong>知识总结</strong></p>\n<ul>\n<li><strong>::before | ::after</strong> — 伪元素用于向某些选择器添加特殊的效果。</li>\n<li><strong>content</strong> — CSS 属性用于在元素的 ::before 和 ::after 伪元素中插入内容。使用 content 属性插入的内容都是匿名的可替换元素。</li>\n<li><strong>:first-child</strong> — CSS 伪类表示在一组兄弟元素中的第一个元素。</li>\n<li><strong>:last-child</strong> — CSS 伪类代表父元素的最后一个子元素。</li>\n</ul>\n<p><strong>自定义无序列表：</strong><a href=\"http://tridiamond.me/frontend-tutorials/customBulletPoint\"><strong>预览实际效果</strong></a> ｜ <a href=\"https://github.com/TriDiamond/frontend-tutorials/tree/master/customBulletPoint\"><strong>GitHub 源码</strong></a> ｜ 喜欢的童鞋 🌟star 一下谢谢<br><strong>面包屑导航：</strong><a href=\"http://tridiamond.me/frontend-tutorials/breadcrumbs\"><strong>预览实际效果</strong></a> ｜ <a href=\"https://github.com/TriDiamond/frontend-tutorials/tree/master/breadcrumbs\"><strong>GitHub 源码</strong></a> ｜ 喜欢的童鞋 🌟star 一下谢谢</p>\n</blockquote>\n<hr>\n<h1 id=\"五、图片视差效果\"><a href=\"#五、图片视差效果\" class=\"headerlink\" title=\"五、图片视差效果\"></a>五、图片视差效果</h1><p><img src=\"https://img-blog.csdnimg.cn/20200403231604772.gif#pic_center\" alt=\"图片视差效果\"><br>这个超级炫酷的效果在官网中非常的受欢迎，这种效果可以给用户带来视觉冲击，也给我们的网站带来了活力。普通的网页图片会跟随着网页一起滑动，但是视觉差效果图就会固定在底部，只有图片所在的窗口上的元素会移动。</p>\n<h2 id=\"仅使用-CSS\"><a href=\"#仅使用-CSS\" class=\"headerlink\" title=\"仅使用 CSS\"></a>仅使用 CSS</h2><p>对你没有看错，这个效果只需要用到 CSS 就能轻易的实现！我们只要使用一个 CSS 背景图的属性<code>background-attachment: fixed</code>，这个特性会把背景相对于视口固定。即使一个元素拥有滚动机制，背景也不会随着元素的内容滚动。</p>\n<p><strong>实现理论：</strong></p>\n<p>一、在含有图片的元素中加入<code>background: url()</code>和<code>background-size: cover</code>（第二个属性适用于定义图片为封面，可以让图片大小自动适应，在很大的屏幕也会显示完整的图片）</p>\n<p>二、然后附加固定背景图的属性<code>background-attachment: fixed</code></p>\n<p>三、最后给这个元素加入一个高度<code>height: 100%</code>或者任意的高度<code>height: 400px</code></p>\n<p>就那么简单哦！不用怀疑，马上上代码，大家都可以自己去试试哦！</p>\n<p><strong>HTML</strong></p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">\b<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parallax-img<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>img</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>这里填写一堆文字就可以了，尽量多一点哦<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>CSS</strong></p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.wrapper</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100wh<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token selector\">.parallax-img</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">background-attachment</span><span class=\"token punctuation\">:</span> fixed<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-position</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-repeat</span><span class=\"token punctuation\">:</span> no-repeat<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-size</span><span class=\"token punctuation\">:</span> cover<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/182/7/thumb.jpg'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token selector\">p</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 1.5rem 3rem<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">min-height</span><span class=\"token punctuation\">:</span> 1000px<span class=\"token punctuation\">;</span> // 当你的文字内容不够，也能撑出足够的高度来看到效果，当然如果你文字足够多，就不需要了\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果想做到我动图里面一样的效果，或者想看是怎么实现的，可以查看下面总结里面的“<strong>预览实际效果</strong>”或者看“<strong>GitHub 源码</strong>”。</p>\n<blockquote>\n<p>🌟<strong>知识总结</strong></p>\n<ul>\n<li><strong>background-attachment: fixed</strong> — 把背景相对于视口固定。即使一个元素拥有滚动机制，背景也不会随着元素的内容滚动。</li>\n<li><strong>background-size: cover</strong> — 可以让图片大小自动适应，在很大的屏幕也会显示完整的图片。</li>\n</ul>\n<p><a href=\"http://tridiamond.me/frontend-tutorials/parallaxImages\"><strong>预览实际效果</strong></a> ｜ <a href=\"https://github.com/TriDiamond/frontend-tutorials/tree/master/parallaxImages\"><strong>GitHub 源码</strong></a> ｜ 喜欢的童鞋 🌟star 一下谢谢</p>\n</blockquote>\n<hr>\n<h2 id=\"使用-CSS-JavaScript\"><a href=\"#使用-CSS-JavaScript\" class=\"headerlink\" title=\"使用 CSS + JavaScript\"></a>使用 CSS + JavaScript</h2><p><img src=\"https://img-blog.csdnimg.cn/20200405164618623.gif#pic_center\"><br>有些童鞋可能没有被这个震撼到或者还是觉得不够刺激。那我们再来一个高级例子，上面的例子在滑动的时候图片是固定死的。如果我们加上 JavaScript 的助力，我们可以让窗口的图片缓慢的跟随这个页面滑动，使得效果更有动力和更有冲击感。</p>\n<p><strong>实现理论</strong><br>首先讲一下排版，因为我们需要在我们滑动页面的时候使用 JavaScript 偏移图片，所以我们需要给图片一个 CSS 属性让我们可以让图片可以根据一个速度来往上或者往下移动。这个例子里面我们让所有图片包裹在一个<code>div</code>里面，<code>class</code>名为<code>block</code>。这个<code>div</code>给予相对定位属性<code>position: relative</code>，这个时候我们就可以在里面加入图片，然后让图片绝对定位<code>position: absolute</code>在这个<code>div</code>盒子里面。</p>\n<p>但是图片是可能很大的，我们需要把图片不超出我们定义个盒子，所以我们的<code>div</code>同时也给予了<code>overflow: hidden</code>和一个高度<code>height: 100%</code>。这样图片超出<code>div</code>盒子就会被隐藏。</p>\n<p>布局代码如下：</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>block<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span>\n    <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unsplash.it/1920/1920/?image=1005<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">data-speed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>-1<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>img-parallax<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>视差速度 -1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>block<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span>\n    <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unsplash.it/1920/1920/?image=1067<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">data-speed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>img-parallax<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>视差速度 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">html,\nbody</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Amatic SC'</span><span class=\"token punctuation\">,</span> cursive<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token selector\">.block</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 16px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token selector\">.block h2</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateY</span><span class=\"token punctuation\">(</span>-50%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 10vw<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 400<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token selector\">.img-parallax</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100vmax<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> -1<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>-50%<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">pointer-events</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>实现这个布局，在你滑动的时候，图片是不会移动的。因为最后一步就是加入 JavaScript 的辅助，让图片活起来。</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token comment\">// 循环获取每一个图片元素</span>\n  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.img-parallax'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">var</span> imgParent <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">parent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">parallaxImg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">var</span> speed <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">'speed'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 获取每张图片设置了的偏移速度</span>\n      <span class=\"token keyword\">var</span> imgY <span class=\"token operator\">=</span> imgParent<span class=\"token punctuation\">.</span><span class=\"token function\">offset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>top <span class=\"token comment\">// 获取图片盒子所在的Y位置</span>\n      <span class=\"token keyword\">var</span> winY <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">scrollTop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 获取当前滑动到的位置</span>\n      <span class=\"token keyword\">var</span> winH <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">height</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 获取浏览器窗口高度</span>\n      <span class=\"token keyword\">var</span> parentH <span class=\"token operator\">=</span> imgParent<span class=\"token punctuation\">.</span><span class=\"token function\">innerHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 获取图片盒子的内高度</span>\n\n      <span class=\"token comment\">// 浏览器窗口底部的所在位置</span>\n      <span class=\"token keyword\">var</span> winBottom <span class=\"token operator\">=</span> winY <span class=\"token operator\">+</span> winH\n\n      <span class=\"token comment\">// 当前图片是否进入浏览器窗口</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>winBottom <span class=\"token operator\">></span> imgY <span class=\"token operator\">&amp;&amp;</span> winY <span class=\"token operator\">&lt;</span> imgY <span class=\"token operator\">+</span> parentH<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 运算图片需要开始移动的位置</span>\n        <span class=\"token keyword\">var</span> imgBottom <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>winBottom <span class=\"token operator\">-</span> imgY<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> speed\n        <span class=\"token comment\">// 运算出图片需要停止移动的位置</span>\n        <span class=\"token keyword\">var</span> imgTop <span class=\"token operator\">=</span> winH <span class=\"token operator\">+</span> parentH\n        <span class=\"token comment\">// 获取从开始移动到结束移动的%（根据开始与结束像素 + 移动速度）</span>\n        <span class=\"token keyword\">var</span> imgPercent <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>imgBottom <span class=\"token operator\">/</span> imgTop<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">50</span> <span class=\"token operator\">-</span> speed <span class=\"token operator\">*</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n      img<span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        top<span class=\"token operator\">:</span> imgPercent <span class=\"token operator\">+</span> <span class=\"token string\">'%'</span><span class=\"token punctuation\">,</span>\n        transform<span class=\"token operator\">:</span> <span class=\"token string\">'translate(-50%, -'</span> <span class=\"token operator\">+</span> imgPercent <span class=\"token operator\">+</span> <span class=\"token string\">'%)'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function-variable function\">scroll</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">parallaxImg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">ready</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">parallaxImg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>🌟<strong>知识总结</strong></p>\n<ul>\n<li><strong>position: relative</strong> — 相对定位。</li>\n<li><strong>position: absolute</strong> — 绝对定位。</li>\n<li><strong>overflow: hidden</strong> — 如果需要，内容将被剪裁以适合填充框。 不提供滚动条。</li>\n</ul>\n<p><a href=\"http://tridiamond.me/frontend-tutorials/advanceParallaxImages\"><strong>预览实际效果</strong></a> ｜ <a href=\"https://github.com/TriDiamond/frontend-tutorials/tree/master/advanceParallaxImages\"><strong>GitHub 源码</strong></a> ｜ 喜欢的童鞋 🌟star 一下谢谢</p>\n</blockquote>\n<hr>\n<h1 id=\"六、裁剪图像的动画\"><a href=\"#六、裁剪图像的动画\" class=\"headerlink\" title=\"六、裁剪图像的动画\"></a>六、裁剪图像的动画</h1><p><img src=\"https://img-blog.csdnimg.cn/2020040600130848.gif#pic_center\" alt=\"裁剪图像的动画\"><br>在有 CSS3 之前裁剪图片实现也是颇有难度的。现在我们有了两个非常方便简单的 CSS3 属性可以实现裁剪，那就是<code>object-fit</code>和<code>object-position</code>, 这两个属性可以让我们改变图片的大小，但是不影响图片的长宽比。</p>\n<p>当然我们可以使用图片处理工具或者使用 JavaScript 等插件来实现图片裁剪功能。但是因为有了 CSS3 的属性，我们不只可以裁剪，我们还可以用裁剪的属性来做图片的动态效果。</p>\n<p>为了让我们的例子更加简单，我们这里使用了<code>&lt;input type=&quot;checkbox&quot;&gt;</code>复选框元素，这样我们就可以使用<code>:checked</code>的伪类来触发启动效果。所以在例子里面我们完全不需要 JavaScript 的协助。</p>\n<p><strong>实现原理：</strong></p>\n<p>一、首先给予图片一个宽高<code>height: 1080px</code>，<code>width: 1920px</code>。</p>\n<p>二、然后用 CSS 选择器，锁定当<code>input</code>被选中后<code>img</code>标签的样式变化。当被选中时，给图片设定一个新的宽高，这里我们给宽高各自 500 像素：<code>width: 500px</code>，<code>height: 500px</code>。</p>\n<p>三、然后我们加上了过渡效果和时间让图片改变宽高时有动画过渡效果：<code>transition: width 2s, height 4s;</code>。</p>\n<p>四、最后加上<code>object-fit: cover</code>和<code>object-position: left-top</code>这两个属性来保持图片的宽高比例，这样就大功告成了！</p>\n<p><strong>我们来看看完成的代码：</strong></p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">勾选裁剪图片\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://img-blog.csdnimg.cn/2020032122230564.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Random<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">input</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>1.5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 只是用来放大复选框大小 */</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 10px 5px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">img</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 1920px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 1080px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> 0s<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">/* css选择器锁定复选框被选中时的状态 */</span>\n<span class=\"token selector\">input:checked + br + img</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 500px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 500px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">object-fit</span><span class=\"token punctuation\">:</span> cover<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">object-position</span><span class=\"token punctuation\">:</span> left-top<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> width 2s<span class=\"token punctuation\">,</span> height 4s<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>🌟<strong>知识总结</strong></p>\n<ul>\n<li><strong>object-fit</strong> — CSS 属性指定可替换元素的内容应该如何适应到其使用的高度和宽度确定的框。</li>\n<li><strong>object-position</strong> — 用来切换被替换元素的内容对象在元素框内的对齐方式。</li>\n<li><strong>transition</strong> — 过渡可以为一个元素在不同状态之间切换的时候定义不同的过渡效果。</li>\n</ul>\n<p><a href=\"http://tridiamond.me/frontend-tutorials/cropImage\"><strong>预览实际效果</strong></a> ｜ <a href=\"https://github.com/TriDiamond/frontend-tutorials/tree/master/cropImage\"><strong>GitHub 源码</strong></a> ｜ 喜欢的童鞋 🌟star 一下谢谢</p>\n</blockquote>\n<hr>\n<h1 id=\"七、混合模式（Blend）\"><a href=\"#七、混合模式（Blend）\" class=\"headerlink\" title=\"七、混合模式（Blend）\"></a>七、混合模式（Blend）</h1><p><img src=\"https://img-blog.csdnimg.cn/20200406104716527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70\" alt=\"混合模式\"><br>如果有使用过 Photoshop 的同学对<code>blend</code>混合模式应该是非常熟悉了，我们都知道混合模式是非常强大，也是 p 图时非常常用的一个功能。但是你们有没有想象过可以在浏览器的 CSS 中直接使用呢？对我们不需要设计师给我们做图，我们前端也可以实现混合模式了。</p>\n<p>在 CSS 中我们不只可以对<code>background</code>背景加入混合模式，我们可以对任何一个元素的自带背景加入混合模式，让你可以做出很多之前没有想过的效果和排版。</p>\n<p>往一个元素加入混合模式，我们只需要使用到一个 CSS 属性<code>mix-blend-mode</code>即可。</p>\n<p><strong>简单实现原理：</strong></p>\n<p>首先我们只需要加一个 h1 标题标签</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>混合模式：颜色减淡<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后我们给<code>h1</code>标签加入<code>mix-blend-mode</code>中的颜色减弱模式<code>color-dodge</code>，但是要注意的是我们需要给<code>body</code>和<code>html</code>加入背景颜色<code>background: white</code>，要不你会发现这个效果会无效。因为<code>h1</code>我们没有给颜色，会自动往上级继承，并且混合模式是针对背景颜色的过滤，所以 body 和 html 需要有背景颜色才行。</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">h1</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">mix-blend-mode</span><span class=\"token punctuation\">:</span> color-dodge<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> yahei<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 5rem<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 20vh 200px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #d1956c<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">html,\nbody</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">body</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>https://images.unsplash.com/photo-1505567745926-ba89000d255a?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=3302&amp;q=80<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-repeat</span><span class=\"token punctuation\">:</span> no-repeat<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-size</span><span class=\"token punctuation\">:</span> cover<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">min-height</span><span class=\"token punctuation\">:</span> 100vh<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>换换背景图和<code>h1</code>标签的字体颜色就可以弄出各种不同的特效了。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200406104058843.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70\" alt=\"颜色减弱\"><br><img src=\"https://img-blog.csdnimg.cn/20200406103844679.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70\" alt=\"颜色减弱\"></p>\n<blockquote>\n<p>🌟<strong>知识总结</strong></p>\n<ul>\n<li><strong>mix-blend-mode</strong> — CSS 属性描述了元素的内容应该与元素的直系父元素的内容和元素的背景如何混合。</li>\n</ul>\n<p><a href=\"http://tridiamond.me/frontend-tutorials/blendMode\"><strong>预览实际效果</strong></a> ｜ <a href=\"https://github.com/TriDiamond/frontend-tutorials/tree/master/blendMode\"><strong>GitHub 源码</strong></a> ｜ 喜欢的童鞋 🌟star 一下谢谢</p>\n</blockquote>\n<hr>\n<h1 id=\"八、瀑布流布局\"><a href=\"#八、瀑布流布局\" class=\"headerlink\" title=\"八、瀑布流布局\"></a>八、瀑布流布局</h1><p><img src=\"https://img-blog.csdnimg.cn/20200406134310340.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70#pic_center\" alt=\"瀑布流布局\"></p>\n<p>CSS <code>Grid</code>和<code>Flexbox</code>让我们可以更简便，更容易和更快的实现各式各样的响应布局，并且让我们快捷方便的在布局中实现横向剧中和竖向剧中。但是回想一下以前是颇为困难的。</p>\n<p>虽然这些新出的布局方式可以让我们解决很多以前的布局难题，但是像瀑布流布局这种，就无法用它们简单来实现了。因为瀑布流一般来说都是宽度一致，但是高度是根据图片自适应的。并且图片的位置也是根据在上方图片的位置而定的。</p>\n<p>其实最好实现瀑布流布局的办法就是用 CSS 的列属性套件，这套属性大多数都是用于排版杂志中的文本列。但是用于布局瀑布流也是特别实用哦。因为以前需要实现瀑布流，就必须有 JavaScript 的辅助来计算图片高度然后决定每张图片的定位和位置，所以现在有了列属性就可以使用纯 CSS 实现了。</p>\n<p><strong>实现原理：</strong></p>\n<p>实现这个布局，首选我们需要把所有的内容先包裹在一个<code>div</code>元素里面，然后给这个元素<code>column-width</code>和<code>column-gap</code>属性。</p>\n<p>然后，为了防止任何元素被分割到两个列之间，将<code>column-break-inside: avoid</code>添加到各个元素中。</p>\n<p>神奇的效果就完美实现了，零 JavaScript。</p>\n<p>我们来看看代码：</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>columns<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>figure</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://source.unsplash.com/random?city<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>figure</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>figure</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://source.unsplash.com/random?night<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>figure</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>figure</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://source.unsplash.com/random?developer<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>figure</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>figure</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://source.unsplash.com/random?building<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>figure</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>figure</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://source.unsplash.com/random?water<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>figure</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>figure</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://source.unsplash.com/random?coding<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>figure</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>figure</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://source.unsplash.com/random?stars<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>figure</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>figure</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://source.unsplash.com/random?forest<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>figure</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>figure</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://source.unsplash.com/random?girls<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>figure</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>figure</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://source.unsplash.com/random?working<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>figure</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.columns</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">column-width</span><span class=\"token punctuation\">:</span> 320px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">column-gap</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 90%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 1100px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 50px auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token selector\">.columns figure</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 1px 2px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>34<span class=\"token punctuation\">,</span> 25<span class=\"token punctuation\">,</span> 25<span class=\"token punctuation\">,</span> 0.4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">column-break-inside</span><span class=\"token punctuation\">:</span> avoid<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 8px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token selector\">.columns figure img</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 8px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>🌟<strong>知识总结</strong></p>\n<ul>\n<li><strong>column-width</strong> — CSS 属性建议一个最佳列宽。 列宽是在添加另一列之前列将成为最大宽度。</li>\n<li><strong>column-width</strong> — 该 CSS 属性用来设置元素列之间的间隔 (gutter) 大小。</li>\n<li><strong>column-break-inside</strong> — 设置或检索对象内部是否断。</li>\n</ul>\n<p><a href=\"http://tridiamond.me/frontend-tutorials/waterfall\"><strong>预览实际效果</strong></a> ｜ <a href=\"https://github.com/TriDiamond/frontend-tutorials/tree/master/waterfall\"><strong>GitHub 源码</strong></a> ｜ 喜欢的童鞋 🌟star 一下谢谢</p>\n</blockquote>\n<hr>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p><img src=\"https://img-blog.csdnimg.cn/20200406152836460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70\" alt=\"总结\"><br>我希望这 8 个前端小技巧和特效对大家有帮助，或多或少有吸收一点新的前端知识。这篇文章提到的内容，其实很多都是值得深挖和学习的。有一些例子我做的比较简单，但是其实是有无限的可能性。喜欢前端的童鞋们，让我们继续在前端领域中一起深挖，让我们的热爱无限的燃烧起来吧！</p>\n<hr>\n<p>在最后我想给大家讲一下我对前端的热爱和态度。</p>\n<p>回想前端这几年，发展真的是突飞猛进，从前端排版，HTML5+CSS3 做 H5 页面，到前端组件化，各种 UI 框架满天飞。</p>\n<p>一开始我随着热潮用起了 UI 框架，起初觉得特别方便，来一个新的项目就直接上一个 UI 框架，研发速度也非常快。但是久而久之就觉得前端开发变成了处理数据，对接接口，实现交互。</p>\n<p>某天在阅览国外的一些前端设计和框架的时候，我突然发现国内多数的前端开发者都不再怎么使用 CSS3 做出一些很好玩的布局和特效了。现在市面上的系统和页面都是千篇一律，普遍都是用一些知名的 UI 框架搭建系统和 APP，基本自己动手去排版已经少之又少。前端已不再是以前的前端，缺少了灵魂。</p>\n<p>但是我们回想一下，我们刚刚开始学习前端的时候，让我们最有成就感，觉得前端特别有意思的那种感觉。就是那种让我们觉得神乎奇迹，不可思议的布局，特效和交互。那种感觉自己成功实现了很优美，很炫酷的页面和特效的感觉，让我们越做越来劲，越做越是兴奋。</p>\n<p>但是在某些公司，研发部都是要求快速开发，UI 设计部门也是受到时间的控制和限制，所以逐步走进了 UI 框架的限制之中。都是围绕这一些 UI 框架来设计和开发系统和应用。</p>\n<p>作为一名热爱前端的开发者，我还是坚持在绝大多数的项目中，自己排版和实现页面交互特效。然后使用 UI 框架作为辅助，主要是用来减轻一些小组件和常用组建的快速实现。（可以说我是比较追求完美和外貌协会的程序员 😂）</p>\n","feature":null,"text":"CSS 是一个很独特的语言。看起来非常简单，但是某种特殊效果看似简单，实现起来就颇有难度。这篇文章主要是给在学习前端的童鞋分享一些新的 CSS 技巧，一些在前端教程和培训课堂中不会讲到的知识。第二就是让还在前端开发这条道路上的童鞋们，重新燃起对前端排版和特效的热爱和热情！🔥 一、...","link":"","raw":"---\ntitle: 前端必看的8个HTML+CSS技巧\ndate: 2020-04-06 21:14:05\ntags:\n  - HTML&CSS\n  - CSS Animation\ncategories:\n  - FrontEnd\ncover: https://img-blog.csdnimg.cn/20200401142526736.png\n---\n\nCSS 是一个很独特的语言。看起来非常简单，但是某种特殊效果看似简单，实现起来就颇有难度。这篇文章主要是给在学习前端的童鞋分享一些新的 CSS 技巧，一些在前端教程和培训课堂中不会讲到的知识。第二就是让还在前端开发这条道路上的童鞋们，重新燃起对前端排版和特效的热爱和热情！🔥\n\n---\n\n# 一、固定底部内容\n\n![固定底部内容](https://img-blog.csdnimg.cn/20200401142526736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70)\n\n这种是一个非常常见的布局方式，但是对于新手来说是比较常见的难题。\n\n这种布局方式在后台管理系统中比较常见，当我们内容不足浏览器窗口高度时，底部内容需要固定在底部。当内容超出了浏览器窗口高度，就会随着内容往后推。\n\n在有 CSS3 之前，实现这个效果是颇有难度的。浏览器窗口高度是会根据不同用户打开浏览器的情况，屏幕大小的差异和浏览器的缩放比例而变。我们需要借助 JavaScript 来实时获取浏览器高度进行运算才能实现。虽然说标题是说“固定”底部，但是我们想要的效果不是`position: fixed`。使用固定定位，在内容高于窗口高度时，就会挡住我们的内容。\n\n随着 CSS3 的来临，最完美的实现方式是使用`Flexbox`。实现的关键就是使用不太被关注的`flex-grow`属性，可以在我们的内容标签元素（比如`div`）中使用。在我们下面的例子里使用了`main`标签。\n\n---\n\n我来讲解一下实现原理吧。\n\n![](https://img-blog.csdnimg.cn/20200401140715577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70)\n\n`flew-grow`是用来控制一个 flex 元素相对它同等级 flex 元素的自身可扩充的空间。如果我们使用`flex-grow: 0`，那这个 flex 元素就完全不会扩展了。所以我们需要把头部和底部之间的内容标签元素设置为`flex-grow: 1`或者`flex-grow: auto`，这样内容部分就会自动填充满头部和底部之外的所有空间。\n\n为了避免底部内容受内容部分扩充空间的影响，我们给`footer`底部元素`flex-shrink: 0`属性。`flex-shrink`的作用与`flex-grow`是恰恰相反，用来控制 flex 元素收缩的空间，这里我们给了`flex-shrink: 0`就是为了底部`footer`的大小不受影响。\n\n我们直接上 HTML 和 CSS 代码看看是怎么实现的。\n\nHTML\n\n```html\n<div id=\"document\">\n  <nav>\n    <h1>头部内容</h1>\n  </nav>\n  <main>\n    <p>可以添加更多内容看看底部的变化哦！</p>\n  </main>\n  <footer>\n    <h1>底部内容</h1>\n  </footer>\n</div>\n```\n\nCSS\n\n```css\n#document {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: #202020;\n  font-family: microsoft yahei, wenquanyi micro hei, sans-serif !important;\n}\n\nnav,\nfooter {\n  background: #494949;\n  display: flex;\n  justify-content: center;\n}\n\nmain {\n  color: #bdbdbd;\n  flex: auto;\n}\n\nfooter {\n  flex-shrink: 0;\n}\n\n* {\n  margin: 0;\n}\n\nh1,\np {\n  padding: 15px;\n}\n\nnav > h1 {\n  color: #82fcfd;\n  text-shadow: 1px 1px 4px #00000080;\n}\n\nfooter > h1 {\n  color: #82fcfd;\n  text-shadow: 1px 1px 4px #00000080;\n}\n```\n\n> 🌟**知识点总结：**\n>\n> - **flex-grow** --- 是用来控制一个 flex 元素相对它同等级 flex 元素的自身可扩充的空间\n> - **flex-shrink** --- 作用与`flex-grow`是恰恰相反，用来控制 flex 元素收缩的空间\n>\n> [**预览实际效果**](http://tridiamond.me/frontend-tutorials/stickyFooter/) ｜ [**GitHub 源码**](https://github.com/TriDiamond/frontend-tutorials/tree/master/stickyFooter) ｜ 喜欢的童鞋 🌟star 一下谢谢\n\n---\n\n# 二、悬停放大图片特效\n\n![悬停放大图片特效](https://img-blog.csdnimg.cn/20200401220041648.gif#pic_center)\n悬停放大图片是一个特别吸引眼球的特效，比较常用于可点击的图片。当用户悬停鼠标在图片上，图片会稍微的放大。\n\n其实实现这个特效是非常简单的。首先我们需要一个`div`包裹这`img`标签，这个包裹层是用来遮挡住图片，当图片放大时不会出现图片超出我们规定的宽高以外。\n\n首先我们来讲讲`div`包裹的属性，我们需要给它一个固定的`width`宽和`height`高。然后我们必须给予这个元素`overflow: hidden`属性。让图片放大的时候不会超出这个`div`元素的宽高。有了这个包裹层，我们就可以编写`img`的各种效果了。\n\n我的例子里面用了`transform: scale(1,1)`作为悬停时的图片特效，这个`transform`是用于改变任何元素的属性的，然后`scale`是用于放大（整数就会放大）或者缩小（负数就会缩小）元素的。\n\n上代码让大家看看：\n\n- html body 中放入\n\n```html\n<div class=\"img-wrapper\">\n  <img src=\"https://img-blog.csdnimg.cn/2020032122230564.png\" />\n</div>\n```\n\n- CSS\n\n```css\n.img-wrapper {\n  width: 400px;\n  height: 400px;\n  overflow: hidden;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.6);\n}\n\n.img-wrapper img {\n  height: 400px;\n  -webkit-transition: 0.3s linear;\n  transition: 0.3s linear;\n}\n\n.img-wrapper img:hover {\n  transform: scale(1.1);\n}\n\n.img-wrapper {\n  display: inline-block;\n  box-sizing: border-box;\n  border: 3px solid #000;\n}\n```\n\n如果你们想让图片更加炫酷可以加上图片过滤属性`filter`，让图片变灰或者变深褐色，然后悬停时候出现更加炫酷的颜色变幻。灰化的属性是`filter: grayscale(100%);`，然后深褐色化的属性是`filter: sepia(100%)`。其实图片还有很多过滤属性的，大家有兴趣也可以去尝试一下哦！\n\n加入特殊效果的代码如下：\n\nHTML\n\n```html\n<!-- 灰度过滤 -->\n<div class=\"img-wrapper\">\n  <img\n    class=\"grayscale-img\"\n    src=\"https://img-blog.csdnimg.cn/2020032211021728.png\"\n  />\n</div>\n\n<!-- 深褐色过滤 -->\n<div class=\"img-wrapper\">\n  <img\n    class=\"sepia-img\"\n    src=\"https://img-blog.csdnimg.cn/2020032122230564.png\"\n  />\n</div>\n```\n\nCSS\n\n```css\n/* ==============\n* 灰度过滤\n* ==============*/\n.grayscale-img {\n  -webkit-filter: grayscale(100%);\n  filter: grayscale(100%);\n}\n\n.grayscale-img:hover {\n  -webkit-filter: grayscale(0);\n  filter: grayscale(0);\n}\n\n/* ==============\n* 深褐色过滤\n* ==============*/\n.sepia-img {\n  -webkit-filter: sepia(100%);\n  filter: sepia(100%);\n}\n\n.sepia-img:hover {\n  -webkit-filter: sepia(0);\n  filter: sepia(0);\n}\n```\n\n> 🌟**知识总结**\n>\n> - **transform** --- 用于改变元素\n> - **scale** --- 对元素进行放大和缩小\n> - **filter** --- 图片过滤器\n> - **grayscale** --- 灰度过滤\n> - **sepia** --- 深褐色过滤\n>\n> [**预览实际效果**](http://tridiamond.me/frontend-tutorials/zoomOnHoverImage/) ｜ [**GitHub 源码**](https://github.com/TriDiamond/frontend-tutorials/tree/master/zoomOnHoverImage) ｜ 喜欢的童鞋 🌟star 一下谢谢\n\n---\n\n# 三、瞬间黑暗模式\n\n![](https://img-blog.csdnimg.cn/20200402143046993.gif#pic_center)\n\n最近微信也逃脱不了黑暗时代的到来，网页也很多都做了黑暗模式的兼容和主题。如果我们在做的一个网站想瞬间实现黑暗模式可以怎么实现呢？\n\n其实有一个很快的方式，我们可以使用`invert`和`hue-rotate`两个 CSS3 过滤器来实现。\n\n`filter: invert()` — 是从`0`到`1`的刻度，`1`是从白变黑。\n`filter: hue-rotate()` — 用于改变你元素的颜色，同时或多或少保持原本相同的色系。这个属性的值可以从`0deg`到`360deg`。\n\n在我们页面的`body`标签上添加这两个属性，我们就可以快速尝试把我们的网站变成\"黑暗模式\"。这里需要注意的是，如果`body`和`html`上没有设置`background`背景颜色，这个过滤就会不起效了哦。\n\nCSS 的代码如下：\n\n```css\nhtml {\n  background: #fff;\n}\n\nbody {\n  background: #fff;\n  filter: invert(1) hue-rotate(270deg);\n}\n```\n\n实现效果\n![](https://img-blog.csdnimg.cn/20200401234411899.gif#pic_center)\n\n这里我们会发现图片的颜色会受影响，并不是很美观，使用 css 过滤器是无法完美切换黑暗模式的。不过使用 JavaScript 辅助就可以完美的切换黑暗模式。\n\n最近出了一个 JavaScript 辅助插件叫`Darkmode.js`。\n\n## 🌓 Darkmode.js\n\n其实`Darkmode.js`运用的也是 css 里面的一个特性叫`mix-blend-mode` — “CSS 属性描述了元素的内容应该与元素的直系父元素的内容和元素的背景如何混合“。加上 Javascript 的辅助判断哪些页面上的元素需要黑化的，哪些是不需要黑化的。就会想我们之前那种做法，导致其他不需要黑化的元素，比如图片，受到影响导致颜色出现问题。\n\n使用`Darkmode.js`非常简单，只要在脚本里面添加以下代码就可以马上加入一个插件，\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/darkmode-js@1.5.5/lib/darkmode-js.min.js\"></script>\n<script>\n  // 这些是这个插件的可配置项：\n  var options = {\n    bottom: '32px', // 定位底部距离 - 默认: '32px'\n    right: '32px', // 定位右边距离 - 默认: '32px'\n    left: 'unset', // 定位左边距离 - 默认: 'unset'\n    time: '0.5s', // 默认动画时间: '0.3s'\n    mixColor: '#fff', // 需要改变的颜色 - 默认: '#fff'\n    backgroundColor: '#fff', // 背景颜色 - 默认: '#fff'\n    buttonColorDark: '#262728', // 黑暗模式下按钮颜色 - 默认: '#100f2c'\n    buttonColorLight: '#fff', // 日间模式下按钮颜色 - 默认: '#fff'\n    saveInCookies: true, // 是否在cookie保存当前模式 - 默认: true,\n    label: '🌓', // 切换模式按钮图标 - 默认: ''\n    autoMatchOsTheme: true, // 是否自动根据系统适应模式 - 默认: true\n  }\n\n  let darkmode = new Darkmode(options)\n  darkmode.showWidget()\n</script>\n```\n\n如果你不希望用这个插件的默认按钮，你可以在你的 JavaScript 代码中自主控制。我们可以通过`.toggle()`方法来切换模式，同时可以使用`.isActivated()`来检测是否已经进入黑暗模式。\n\n```js\nconst darkmode = new Darkmode()\ndarkmode.toggle()\nconsole.log(darkmode.isActivated()) // 如果已经进入黑暗模式会返回 true\n```\n\n> 🌟**知识总结**\n>\n> - **filter: invert()** — 可以把页面从白变黑，也可以从黑变白。\n> - **filter: hue-rotate()** — 用于改变你元素的颜色，同时或多或少保持原本相同的色系。\n> - [**Darkmode.js**](https://darkmodejs.learn.uno/) — 瞬间实现黑暗模式。\n>\n> **Invert 方式黑暗模式：**[预览实际效果](http://tridiamond.me/frontend-tutorials/instantDarkMode/instantDark) ｜ [GitHub 源码](https://github.com/TriDiamond/frontend-tutorials/tree/master/instantDarkMode/instantDark) ｜ 喜欢的童鞋 🌟star 一下谢谢\n> **Darkmode.js 黑暗模式：**[预览实际效果](http://tridiamond.me/frontend-tutorials/instantDarkMode/darkmodeJs) ｜ [GitHub 源码](https://github.com/TriDiamond/frontend-tutorials/tree/master/instantDarkMode/darkmodeJs) ｜ 喜欢的童鞋 🌟star 一下谢谢\n\n---\n\n# 四、自定义列表符号\n\n![自定义列表符号](https://img-blog.csdnimg.cn/20200402103145722.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70)\n`ul`，`li`的无序列表有默认的符号`·`，但是在很多情况下我们希望可以给这个符号加入自己的样式和颜色，甚至是换成自定义的符号。默认的符号我们是无法做任何的样式处理，而且默认的符号在 CSS 属性里面只有几个选择可以使用，很多情况下都是无法满足我们的设计。\n\n其实自定义无序列表符号不难，我们只需要使用伪元素`::before`加`content`属性就可以实现。\n\n在我这个例子里面我做了两个任务列表，一个是待处理任务，一个是已完成任务，各自给了不一样的列表符号和颜色。\n\n**实现原理**\n\n一、首先我们禁用了`ul`的默认符号样式`list-style: none`\n\n二、在`li`的`:before`伪元素上给予`content`内容值，待处理任务使用`🗹`，已完成任务`li.completed:before`使用`✔`\n\n三、为了展示效果更加好看我分别给了`li`和`li .completed`两个不同的颜色\n\n**上代码看看是怎么实现的吧：**\n\n**HTML**\n\n```html\n<div>\n  <h2>待处理</h2>\n  <ul>\n    <li>待办任务1</li>\n    <li>待办任务2</li>\n    <li>待办任务3</li>\n    <li>待办任务4</li>\n    <li>待办任务5</li>\n  </ul>\n</div>\n<div>\n  <h2>已完成</h2>\n  <ul>\n    <li class=\"completed\">完成任务1</li>\n    <li class=\"completed\">完成任务2</li>\n    <li class=\"completed\">完成任务3</li>\n  </ul>\n</div>\n```\n\n**CSS**\n\n```css\nul {\n  list-style: none;\n  color: #fff;\n  font-size: 20px;\n  border: 3px solid #000;\n  padding: 1rem 2rem;\n  min-height: 200px;\n  margin: 15px 2rem 0 0;\n  background: #323232;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.6);\n  border-radius: 8px;\n}\n\nli {\n  padding: 0.3rem 0;\n}\n\nli::before {\n  content: '🗹 ';\n  color: aqua;\n}\n\nli.completed::before {\n  content: '✔ ';\n  text-decoration: none;\n  color: greenyellow;\n}\n\nli.completed {\n  text-decoration: line-through;\n  color: #bdbdbd;\n}\n```\n\n`::before`和`::after`伪元素加`content`属性可以用来做很多特殊的效果，也是当代前端排版比较常用的“魔法”。说到伪元素的使用，我再给大家说一个比较常用的使用场景。\n\n在管理后台或者是文章展示中，我们经常可以见到的“面包屑导航”也是用伪元素来插入每个目录中间的符号的。\n![面包屑导航](https://img-blog.csdnimg.cn/20200402224549741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70)\n**实现逻辑**\n\n一、这个导航含有 3 个`a`标签，首先给每个`a`标签加入一个伪元素`::after`，然后在`content`属性插入`/`符号。\n\n二、然后使用`a:first-child`，这个伪类会选择到第一个`a`标签，然后使用`content`属性加入`»`符号。\n\n三、因为我们第一步在每个`a`标签的后面插入了`/`符号, 所以我们需要在最后一个`a`标签清除掉。这里我们使用`:last-child`选择到最后一个`a`标签，然后用`content: \" \"`属性把伪元素的内容清楚掉。\n\n**HTML**\n\n```html\n<div class=\"breadcrumb\">\n  <a>三钻</a>\n  <a>前端</a>\n  <a>教程</a>\n</div>\n```\n\n**CSS**\n\n```css\n.breadcrumb {\n  font-size: 1.6rem;\n  color: #fff;\n}\n.breadcrumb a:first-child {\n  color: #82fcfd;\n}\n.breadcrumb a:first-child::before {\n  content: ' » ';\n}\n.breadcrumb a::after {\n  content: ' /';\n  color: #ef6eae;\n}\n.breadcrumb a:last-child::after {\n  content: '';\n}\n```\n\n> 🌟**知识总结**\n>\n> - **::before | ::after** — 伪元素用于向某些选择器添加特殊的效果。\n> - **content** — CSS 属性用于在元素的 ::before 和 ::after 伪元素中插入内容。使用 content 属性插入的内容都是匿名的可替换元素。\n> - **:first-child** — CSS 伪类表示在一组兄弟元素中的第一个元素。\n> - **:last-child** — CSS 伪类代表父元素的最后一个子元素。\n>\n> **自定义无序列表：**[**预览实际效果**](http://tridiamond.me/frontend-tutorials/customBulletPoint) ｜ [**GitHub 源码**](https://github.com/TriDiamond/frontend-tutorials/tree/master/customBulletPoint) ｜ 喜欢的童鞋 🌟star 一下谢谢\n> **面包屑导航：**[**预览实际效果**](http://tridiamond.me/frontend-tutorials/breadcrumbs) ｜ [**GitHub 源码**](https://github.com/TriDiamond/frontend-tutorials/tree/master/breadcrumbs) ｜ 喜欢的童鞋 🌟star 一下谢谢\n\n---\n\n# 五、图片视差效果\n\n![图片视差效果](https://img-blog.csdnimg.cn/20200403231604772.gif#pic_center)\n这个超级炫酷的效果在官网中非常的受欢迎，这种效果可以给用户带来视觉冲击，也给我们的网站带来了活力。普通的网页图片会跟随着网页一起滑动，但是视觉差效果图就会固定在底部，只有图片所在的窗口上的元素会移动。\n\n## 仅使用 CSS\n\n对你没有看错，这个效果只需要用到 CSS 就能轻易的实现！我们只要使用一个 CSS 背景图的属性`background-attachment: fixed`，这个特性会把背景相对于视口固定。即使一个元素拥有滚动机制，背景也不会随着元素的内容滚动。\n\n**实现理论：**\n\n一、在含有图片的元素中加入`background: url()`和`background-size: cover`（第二个属性适用于定义图片为封面，可以让图片大小自动适应，在很大的屏幕也会显示完整的图片）\n\n二、然后附加固定背景图的属性`background-attachment: fixed`\n\n三、最后给这个元素加入一个高度`height: 100%`或者任意的高度`height: 400px`\n\n就那么简单哦！不用怀疑，马上上代码，大家都可以自己去试试哦！\n\n**HTML**\n\n```html\n\b<div class=\"wrapper\">\n   <div class=\"parallax-img\"></img>\n   <p>这里填写一堆文字就可以了，尽量多一点哦</p>\n</div>\n```\n\n**CSS**\n\n```css\n.wrapper {\n  height: 100wh;\n}\n.parallax-img {\n  background-attachment: fixed;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  height: 100%;\n  background-image: url('http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/182/7/thumb.jpg');\n}\np {\n  font-size: 20px;\n  padding: 1.5rem 3rem;\n  min-height: 1000px; // 当你的文字内容不够，也能撑出足够的高度来看到效果，当然如果你文字足够多，就不需要了\n}\n```\n\n如果想做到我动图里面一样的效果，或者想看是怎么实现的，可以查看下面总结里面的“**预览实际效果**”或者看“**GitHub 源码**”。\n\n> 🌟**知识总结**\n>\n> - **background-attachment: fixed** — 把背景相对于视口固定。即使一个元素拥有滚动机制，背景也不会随着元素的内容滚动。\n> - **background-size: cover** — 可以让图片大小自动适应，在很大的屏幕也会显示完整的图片。\n>\n> [**预览实际效果**](http://tridiamond.me/frontend-tutorials/parallaxImages) ｜ [**GitHub 源码**](https://github.com/TriDiamond/frontend-tutorials/tree/master/parallaxImages) ｜ 喜欢的童鞋 🌟star 一下谢谢\n\n---\n\n## 使用 CSS + JavaScript\n\n![](https://img-blog.csdnimg.cn/20200405164618623.gif#pic_center)\n有些童鞋可能没有被这个震撼到或者还是觉得不够刺激。那我们再来一个高级例子，上面的例子在滑动的时候图片是固定死的。如果我们加上 JavaScript 的助力，我们可以让窗口的图片缓慢的跟随这个页面滑动，使得效果更有动力和更有冲击感。\n\n**实现理论**\n首先讲一下排版，因为我们需要在我们滑动页面的时候使用 JavaScript 偏移图片，所以我们需要给图片一个 CSS 属性让我们可以让图片可以根据一个速度来往上或者往下移动。这个例子里面我们让所有图片包裹在一个`div`里面，`class`名为`block`。这个`div`给予相对定位属性`position: relative`，这个时候我们就可以在里面加入图片，然后让图片绝对定位`position: absolute`在这个`div`盒子里面。\n\n但是图片是可能很大的，我们需要把图片不超出我们定义个盒子，所以我们的`div`同时也给予了`overflow: hidden`和一个高度`height: 100%`。这样图片超出`div`盒子就会被隐藏。\n\n布局代码如下：\n\n```html\n<div class=\"block\">\n  <img\n    src=\"https://unsplash.it/1920/1920/?image=1005\"\n    data-speed=\"-1\"\n    class=\"img-parallax\"\n  />\n  <h2>视差速度 -1</h2>\n</div>\n<div class=\"block\">\n  <img\n    src=\"https://unsplash.it/1920/1920/?image=1067\"\n    data-speed=\"1\"\n    class=\"img-parallax\"\n  />\n  <h2>视差速度 1</h2>\n</div>\n```\n\n```css\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n  width: 100%;\n  font-family: 'Amatic SC', cursive;\n}\n.block {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  overflow: hidden;\n  font-size: 16px;\n}\n.block h2 {\n  position: relative;\n  display: block;\n  text-align: center;\n  margin: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  font-size: 10vw;\n  color: white;\n  font-weight: 400;\n}\n.img-parallax {\n  width: 100vmax;\n  z-index: -1;\n  position: absolute;\n  top: 0;\n  left: 50%;\n  transform: translate(-50%, 0);\n  pointer-events: none;\n}\n```\n\n实现这个布局，在你滑动的时候，图片是不会移动的。因为最后一步就是加入 JavaScript 的辅助，让图片活起来。\n\n```html\n<script src=\"https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js\"></script>\n<script>\n  // 循环获取每一个图片元素\n  $('.img-parallax').each(function () {\n    var img = $(this)\n    var imgParent = $(this).parent()\n    function parallaxImg() {\n      var speed = img.data('speed') // 获取每张图片设置了的偏移速度\n      var imgY = imgParent.offset().top // 获取图片盒子所在的Y位置\n      var winY = $(this).scrollTop() // 获取当前滑动到的位置\n      var winH = $(this).height() // 获取浏览器窗口高度\n      var parentH = imgParent.innerHeight() // 获取图片盒子的内高度\n\n      // 浏览器窗口底部的所在位置\n      var winBottom = winY + winH\n\n      // 当前图片是否进入浏览器窗口\n      if (winBottom > imgY && winY < imgY + parentH) {\n        // 运算图片需要开始移动的位置\n        var imgBottom = (winBottom - imgY) * speed\n        // 运算出图片需要停止移动的位置\n        var imgTop = winH + parentH\n        // 获取从开始移动到结束移动的%（根据开始与结束像素 + 移动速度）\n        var imgPercent = (imgBottom / imgTop) * 100 + (50 - speed * 50)\n      }\n      img.css({\n        top: imgPercent + '%',\n        transform: 'translate(-50%, -' + imgPercent + '%)',\n      })\n    }\n    $(document).on({\n      scroll: function () {\n        parallaxImg()\n      },\n      ready: function () {\n        parallaxImg()\n      },\n    })\n  })\n</script>\n```\n\n> 🌟**知识总结**\n>\n> - **position: relative** — 相对定位。\n> - **position: absolute** — 绝对定位。\n> - **overflow: hidden** — 如果需要，内容将被剪裁以适合填充框。 不提供滚动条。\n>\n> [**预览实际效果**](http://tridiamond.me/frontend-tutorials/advanceParallaxImages) ｜ [**GitHub 源码**](https://github.com/TriDiamond/frontend-tutorials/tree/master/advanceParallaxImages) ｜ 喜欢的童鞋 🌟star 一下谢谢\n\n---\n\n# 六、裁剪图像的动画\n\n![裁剪图像的动画](https://img-blog.csdnimg.cn/2020040600130848.gif#pic_center)\n在有 CSS3 之前裁剪图片实现也是颇有难度的。现在我们有了两个非常方便简单的 CSS3 属性可以实现裁剪，那就是`object-fit`和`object-position`, 这两个属性可以让我们改变图片的大小，但是不影响图片的长宽比。\n\n当然我们可以使用图片处理工具或者使用 JavaScript 等插件来实现图片裁剪功能。但是因为有了 CSS3 的属性，我们不只可以裁剪，我们还可以用裁剪的属性来做图片的动态效果。\n\n为了让我们的例子更加简单，我们这里使用了`<input type=\"checkbox\">`复选框元素，这样我们就可以使用`:checked`的伪类来触发启动效果。所以在例子里面我们完全不需要 JavaScript 的协助。\n\n**实现原理：**\n\n一、首先给予图片一个宽高`height: 1080px`，`width: 1920px`。\n\n二、然后用 CSS 选择器，锁定当`input`被选中后`img`标签的样式变化。当被选中时，给图片设定一个新的宽高，这里我们给宽高各自 500 像素：`width: 500px`，`height: 500px`。\n\n三、然后我们加上了过渡效果和时间让图片改变宽高时有动画过渡效果：`transition: width 2s, height 4s;`。\n\n四、最后加上`object-fit: cover`和`object-position: left-top`这两个属性来保持图片的宽高比例，这样就大功告成了！\n\n**我们来看看完成的代码：**\n\n```html\n勾选裁剪图片\n<input type=\"checkbox\" />\n<br />\n<img src=\"https://img-blog.csdnimg.cn/2020032122230564.png\" alt=\"Random\" />\n```\n\n```css\ninput {\n  transform: scale(1.5); /* 只是用来放大复选框大小 */\n  margin: 10px 5px;\n  color: #fff;\n}\n\nimg {\n  width: 1920px;\n  height: 1080px;\n  transition: 0s;\n}\n\n/* css选择器锁定复选框被选中时的状态 */\ninput:checked + br + img {\n  width: 500px;\n  height: 500px;\n  object-fit: cover;\n  object-position: left-top;\n  transition: width 2s, height 4s;\n}\n```\n\n> 🌟**知识总结**\n>\n> - **object-fit** — CSS 属性指定可替换元素的内容应该如何适应到其使用的高度和宽度确定的框。\n> - **object-position** — 用来切换被替换元素的内容对象在元素框内的对齐方式。\n> - **transition** — 过渡可以为一个元素在不同状态之间切换的时候定义不同的过渡效果。\n>\n> [**预览实际效果**](http://tridiamond.me/frontend-tutorials/cropImage) ｜ [**GitHub 源码**](https://github.com/TriDiamond/frontend-tutorials/tree/master/cropImage) ｜ 喜欢的童鞋 🌟star 一下谢谢\n\n---\n\n# 七、混合模式（Blend）\n\n![混合模式](https://img-blog.csdnimg.cn/20200406104716527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70)\n如果有使用过 Photoshop 的同学对`blend`混合模式应该是非常熟悉了，我们都知道混合模式是非常强大，也是 p 图时非常常用的一个功能。但是你们有没有想象过可以在浏览器的 CSS 中直接使用呢？对我们不需要设计师给我们做图，我们前端也可以实现混合模式了。\n\n在 CSS 中我们不只可以对`background`背景加入混合模式，我们可以对任何一个元素的自带背景加入混合模式，让你可以做出很多之前没有想过的效果和排版。\n\n往一个元素加入混合模式，我们只需要使用到一个 CSS 属性`mix-blend-mode`即可。\n\n**简单实现原理：**\n\n首先我们只需要加一个 h1 标题标签\n\n```html\n<h1>混合模式：颜色减淡</h1>\n```\n\n然后我们给`h1`标签加入`mix-blend-mode`中的颜色减弱模式`color-dodge`，但是要注意的是我们需要给`body`和`html`加入背景颜色`background: white`，要不你会发现这个效果会无效。因为`h1`我们没有给颜色，会自动往上级继承，并且混合模式是针对背景颜色的过滤，所以 body 和 html 需要有背景颜色才行。\n\n```css\nh1 {\n  mix-blend-mode: color-dodge;\n  font-family: yahei;\n  font-size: 5rem;\n  text-align: center;\n  margin: 0;\n  padding: 20vh 200px;\n  color: #d1956c;\n}\n\nhtml,\nbody {\n  margin: 0;\n  background-color: white;\n}\n\nbody {\n  background-image: url(https://images.unsplash.com/photo-1505567745926-ba89000d255a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=3302&q=80);\n  background-repeat: no-repeat;\n  background-size: cover;\n  min-height: 100vh;\n  overflow: hidden;\n}\n```\n\n换换背景图和`h1`标签的字体颜色就可以弄出各种不同的特效了。\n\n![颜色减弱](https://img-blog.csdnimg.cn/20200406104058843.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70)\n![颜色减弱](https://img-blog.csdnimg.cn/20200406103844679.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70)\n\n> 🌟**知识总结**\n>\n> - **mix-blend-mode** — CSS 属性描述了元素的内容应该与元素的直系父元素的内容和元素的背景如何混合。\n>\n> [**预览实际效果**](http://tridiamond.me/frontend-tutorials/blendMode) ｜ [**GitHub 源码**](https://github.com/TriDiamond/frontend-tutorials/tree/master/blendMode) ｜ 喜欢的童鞋 🌟star 一下谢谢\n\n---\n\n# 八、瀑布流布局\n\n![瀑布流布局](https://img-blog.csdnimg.cn/20200406134310340.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70#pic_center)\n\nCSS `Grid`和`Flexbox`让我们可以更简便，更容易和更快的实现各式各样的响应布局，并且让我们快捷方便的在布局中实现横向剧中和竖向剧中。但是回想一下以前是颇为困难的。\n\n虽然这些新出的布局方式可以让我们解决很多以前的布局难题，但是像瀑布流布局这种，就无法用它们简单来实现了。因为瀑布流一般来说都是宽度一致，但是高度是根据图片自适应的。并且图片的位置也是根据在上方图片的位置而定的。\n\n其实最好实现瀑布流布局的办法就是用 CSS 的列属性套件，这套属性大多数都是用于排版杂志中的文本列。但是用于布局瀑布流也是特别实用哦。因为以前需要实现瀑布流，就必须有 JavaScript 的辅助来计算图片高度然后决定每张图片的定位和位置，所以现在有了列属性就可以使用纯 CSS 实现了。\n\n**实现原理：**\n\n实现这个布局，首选我们需要把所有的内容先包裹在一个`div`元素里面，然后给这个元素`column-width`和`column-gap`属性。\n\n然后，为了防止任何元素被分割到两个列之间，将`column-break-inside: avoid`添加到各个元素中。\n\n神奇的效果就完美实现了，零 JavaScript。\n\n我们来看看代码：\n\n```html\n<div class=\"columns\">\n  <figure>\n    <img src=\"https://source.unsplash.com/random?city\" alt=\"\" />\n  </figure>\n  <figure>\n    <img src=\"https://source.unsplash.com/random?night\" alt=\"\" />\n  </figure>\n  <figure>\n    <img src=\"https://source.unsplash.com/random?developer\" alt=\"\" />\n  </figure>\n  <figure>\n    <img src=\"https://source.unsplash.com/random?building\" alt=\"\" />\n  </figure>\n  <figure>\n    <img src=\"https://source.unsplash.com/random?water\" alt=\"\" />\n  </figure>\n  <figure>\n    <img src=\"https://source.unsplash.com/random?coding\" alt=\"\" />\n  </figure>\n  <figure>\n    <img src=\"https://source.unsplash.com/random?stars\" alt=\"\" />\n  </figure>\n  <figure>\n    <img src=\"https://source.unsplash.com/random?forest\" alt=\"\" />\n  </figure>\n  <figure>\n    <img src=\"https://source.unsplash.com/random?girls\" alt=\"\" />\n  </figure>\n  <figure>\n    <img src=\"https://source.unsplash.com/random?working\" alt=\"\" />\n  </figure>\n</div>\n```\n\n```css\n.columns {\n  column-width: 320px;\n  column-gap: 15px;\n  width: 90%;\n  max-width: 1100px;\n  margin: 50px auto;\n}\n.columns figure {\n  display: inline-block;\n  box-shadow: 0 1px 2px rgba(34, 25, 25, 0.4);\n  column-break-inside: avoid;\n  border-radius: 8px;\n}\n.columns figure img {\n  width: 100%;\n  height: auto;\n  margin-bottom: 15px;\n  border-radius: 8px;\n}\n```\n\n> 🌟**知识总结**\n>\n> - **column-width** — CSS 属性建议一个最佳列宽。 列宽是在添加另一列之前列将成为最大宽度。\n> - **column-width** — 该 CSS 属性用来设置元素列之间的间隔 (gutter) 大小。\n> - **column-break-inside** — 设置或检索对象内部是否断。\n>\n> [**预览实际效果**](http://tridiamond.me/frontend-tutorials/waterfall) ｜ [**GitHub 源码**](https://github.com/TriDiamond/frontend-tutorials/tree/master/waterfall) ｜ 喜欢的童鞋 🌟star 一下谢谢\n\n---\n\n# 总结\n\n![总结](https://img-blog.csdnimg.cn/20200406152836460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70)\n我希望这 8 个前端小技巧和特效对大家有帮助，或多或少有吸收一点新的前端知识。这篇文章提到的内容，其实很多都是值得深挖和学习的。有一些例子我做的比较简单，但是其实是有无限的可能性。喜欢前端的童鞋们，让我们继续在前端领域中一起深挖，让我们的热爱无限的燃烧起来吧！\n\n---\n\n在最后我想给大家讲一下我对前端的热爱和态度。\n\n回想前端这几年，发展真的是突飞猛进，从前端排版，HTML5+CSS3 做 H5 页面，到前端组件化，各种 UI 框架满天飞。\n\n一开始我随着热潮用起了 UI 框架，起初觉得特别方便，来一个新的项目就直接上一个 UI 框架，研发速度也非常快。但是久而久之就觉得前端开发变成了处理数据，对接接口，实现交互。\n\n某天在阅览国外的一些前端设计和框架的时候，我突然发现国内多数的前端开发者都不再怎么使用 CSS3 做出一些很好玩的布局和特效了。现在市面上的系统和页面都是千篇一律，普遍都是用一些知名的 UI 框架搭建系统和 APP，基本自己动手去排版已经少之又少。前端已不再是以前的前端，缺少了灵魂。\n\n但是我们回想一下，我们刚刚开始学习前端的时候，让我们最有成就感，觉得前端特别有意思的那种感觉。就是那种让我们觉得神乎奇迹，不可思议的布局，特效和交互。那种感觉自己成功实现了很优美，很炫酷的页面和特效的感觉，让我们越做越来劲，越做越是兴奋。\n\n但是在某些公司，研发部都是要求快速开发，UI 设计部门也是受到时间的控制和限制，所以逐步走进了 UI 框架的限制之中。都是围绕这一些 UI 框架来设计和开发系统和应用。\n\n作为一名热爱前端的开发者，我还是坚持在绝大多数的项目中，自己排版和实现页面交互特效。然后使用 UI 框架作为辅助，主要是用来减轻一些小组件和常用组建的快速实现。（可以说我是比较追求完美和外貌协会的程序员 😂）\n","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"16 mins."},"categories":[{"name":"FrontEnd","slug":"FrontEnd","count":9,"path":"api/categories/FrontEnd.json"}],"tags":[{"name":"HTML&CSS","slug":"HTML-CSS","count":4,"path":"api/tags/HTML-CSS.json"},{"name":"CSS Animation","slug":"CSS-Animation","count":1,"path":"api/tags/CSS-Animation.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E5%9B%BA%E5%AE%9A%E5%BA%95%E9%83%A8%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">一、固定底部内容</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E6%82%AC%E5%81%9C%E6%94%BE%E5%A4%A7%E5%9B%BE%E7%89%87%E7%89%B9%E6%95%88\"><span class=\"toc-text\">二、悬停放大图片特效</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E7%9E%AC%E9%97%B4%E9%BB%91%E6%9A%97%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">三、瞬间黑暗模式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%F0%9F%8C%93-Darkmode-js\"><span class=\"toc-text\">🌓 Darkmode.js</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%97%E8%A1%A8%E7%AC%A6%E5%8F%B7\"><span class=\"toc-text\">四、自定义列表符号</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E5%9B%BE%E7%89%87%E8%A7%86%E5%B7%AE%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">五、图片视差效果</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%85%E4%BD%BF%E7%94%A8-CSS\"><span class=\"toc-text\">仅使用 CSS</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-CSS-JavaScript\"><span class=\"toc-text\">使用 CSS + JavaScript</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%AD%E3%80%81%E8%A3%81%E5%89%AA%E5%9B%BE%E5%83%8F%E7%9A%84%E5%8A%A8%E7%94%BB\"><span class=\"toc-text\">六、裁剪图像的动画</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%83%E3%80%81%E6%B7%B7%E5%90%88%E6%A8%A1%E5%BC%8F%EF%BC%88Blend%EF%BC%89\"><span class=\"toc-text\">七、混合模式（Blend）</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%AB%E3%80%81%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80\"><span class=\"toc-text\">八、瀑布流布局</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"三钻","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":""},"mapped":true,"prev_post":{"title":"VSCode常用快捷键大全","uid":"dc4e2e8dd5224ff3b1a1b269ea5930dc","slug":"tools/vscode-shortcuts","date":"2020-04-19T12:18:46.000Z","updated":"2021-03-29T15:37:21.171Z","comments":true,"path":"api/articles/tools/vscode-shortcuts.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/20200417215902749.png","text":"我之前也是用过很多代码编辑器，从NotePad++、SublimeText一直到PHPStorm，最后VSCode。这个过程每一个编辑器我都折腾了很多配置，插件和主题。开发者的编辑器就等同于一个刀客的随身佩刀，一个枪手的随身配枪。一个好的装备的配件可以大大提升我们的战斗力。 所以...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"Tools","slug":"Tools","count":3,"path":"api/categories/Tools.json"}],"tags":[{"name":"VSCode","slug":"VSCode","count":3,"path":"api/tags/VSCode.json"},{"name":"VSCode Shortcuts","slug":"VSCode-Shortcuts","count":1,"path":"api/tags/VSCode-Shortcuts.json"}],"author":{"name":"三钻","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":""}},"next_post":{"title":"写给想学和在学编程的你们，学习编程的7个好处","uid":"c6cc4f245503271cd2de19bf74610947","slug":"notes/benefits-for-learning-programming","date":"2020-03-29T19:20:41.000Z","updated":"2021-03-29T15:37:21.171Z","comments":true,"path":"api/articles/notes/benefits-for-learning-programming.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/20200329163909438.png","text":"你们有没有这种经历？亲戚或者爱人甚至是不做技术的朋友，看到我们屏幕上的小括号&#123;&#125;，大括号[]，还有一大堆的技术英文单词private，public，function等等，都会惊叹一句“你写的是什么呀？太可怕了，全是英文看不懂。”或者“做个程序员是不是需要英语很...","link":"","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[{"name":"NOTES","slug":"NOTES","count":3,"path":"api/categories/NOTES.json"}],"tags":[{"name":"Programmer","slug":"Programmer","count":3,"path":"api/tags/Programmer.json"},{"name":"Better Programming","slug":"Better-Programming","count":3,"path":"api/tags/Better-Programming.json"}],"author":{"name":"三钻","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":""}}}