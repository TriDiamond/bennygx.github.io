{"title":"GitLab Webhook 自动部署","uid":"0e4eed29bacbb07352028a3973ca9ed9","slug":"server/aliyun-webhook-setup","date":"2019-09-10T01:51:23.000Z","updated":"2021-03-29T16:00:09.456Z","comments":true,"path":"api/articles/server/aliyun-webhook-setup.json","excerpt":"","keywords":null,"cover":"https://s2.ax1x.com/2019/09/18/n7ku11.png","content":"<h2 id=\"创建与填写部署公钥\"><a href=\"#创建与填写部署公钥\" class=\"headerlink\" title=\"创建与填写部署公钥\"></a>创建与填写部署公钥</h2><h3 id=\"创建部署公钥\"><a href=\"#创建部署公钥\" class=\"headerlink\" title=\"创建部署公钥\"></a>创建部署公钥</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> -Hu www ssh-keygen -t rsa<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote>\n<p>如果创建失败首先需要创建/home/www/.ssh 这个文件夹</p>\n</blockquote>\n<h3 id=\"查看公钥\"><a href=\"#查看公钥\" class=\"headerlink\" title=\"查看公钥\"></a>查看公钥</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> /home/www/.ssh/id_rsa.pub\n``<span class=\"token variable\"><span class=\"token variable\">`</span>··\n\n<span class=\"token comment\">### 添加 Hook</span>\n\n在阿里云 code.aliyun.com 上的 profile<span class=\"token operator\">></span>ssh_key 里面添加公钥\n\n<span class=\"token comment\">## 初始化 git 项目文件夹</span>\n\n<span class=\"token variable\">`</span></span>``bash\n<span class=\"token function\">sudo</span> -Hu www <span class=\"token function\">git</span> clone <span class=\"token punctuation\">[</span>git地址<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>这里注意, 一定要用 www 的身份状态要不后期无法自动 git pull</p>\n</blockquote>\n<h2 id=\"自动部署脚本-PHP\"><a href=\"#自动部署脚本-PHP\" class=\"headerlink\" title=\"自动部署脚本 (PHP)\"></a>自动部署脚本 (PHP)</h2><h3 id=\"Shell-exec\"><a href=\"#Shell-exec\" class=\"headerlink\" title=\"Shell_exec\"></a>Shell_exec</h3><p>在使用这个 PHP 脚本的时候我们需要用到<code>shell_exec</code>php 的原生函数, php-fpm 是默认屏蔽这个函数的, 所有需要在 php.ini 里面修改一下配置</p>\n<blockquote>\n<p>找到<code>disable_functions</code>这个参数, 并且在里面去掉<code>shell_exec</code></p>\n</blockquote>\n<h3 id=\"PHP-脚本\"><a href=\"#PHP-脚本\" class=\"headerlink\" title=\"PHP 脚本\"></a>PHP 脚本</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$token</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token variable\">$token</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'access denied'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$json</span> <span class=\"token operator\">=</span> <span class=\"token function\">json_decode</span><span class=\"token punctuation\">(</span><span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'php://input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$repo</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$json</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'repository'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 只在主分支提交时且提交数大于0执行自动部署</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$json</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ref'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'refs/heads/master'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$json</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'total_commits_count'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$pull_result</span> <span class=\"token operator\">=</span> <span class=\"token function\">shell_exec</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'cd /to/project/path/ &amp;&amp; git pull'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$pull_result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token variable\">$res_log</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'----------pull 成功---------------'</span><span class=\"token operator\">.</span><span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token variable\">$res_log</span> <span class=\"token operator\">.=</span> <span class=\"token variable\">$json</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'user_name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">' 在'</span> <span class=\"token operator\">.</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Y-m-d H:i:s'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'向'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$json</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'repository'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'项目的'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$json</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ref'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'分支push了'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$json</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'total_commits_count'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'个commit：'</span> <span class=\"token operator\">.</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$res_log</span> <span class=\"token operator\">.=</span> <span class=\"token variable\">$pull_result</span><span class=\"token operator\">.</span><span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cityconcierge-webhook-log.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$res_log</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">FILE_APPEND</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//追加写入</span>\n\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token variable\">$res_log</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'------------pull 失败-------------'</span><span class=\"token operator\">.</span><span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token variable\">$res_log</span> <span class=\"token operator\">.=</span> <span class=\"token variable\">$json</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'user_name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">' 在'</span> <span class=\"token operator\">.</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Y-m-d H:i:s'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'向'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$json</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'repository'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'项目的'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$json</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ref'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'分支push了'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$json</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'total_commits_count'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'个commit：'</span> <span class=\"token operator\">.</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$res_log</span> <span class=\"token operator\">.=</span> <span class=\"token variable\">$pull_result</span><span class=\"token operator\">.</span><span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cityconcierge-webhook-log.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$res_log</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">FILE_APPEND</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//追加写入</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","feature":null,"text":"创建与填写部署公钥创建部署公钥sudo -Hu www ssh-keygen -t rsa 如果创建失败首先需要创建/home/www/.ssh 这个文件夹 查看公钥cat /home/www/.ssh/id_rsa.pub ```·· ### 添加 Hook 在阿里云 code...","link":"","raw":"---\ntitle: GitLab Webhook 自动部署\ndate: 2019-09-10 01:51:23\ncategories:\n  - 运维\ntags:\n  - Gitlab\n  - Webhook\ncover: https://s2.ax1x.com/2019/09/18/n7ku11.png\n---\n\n## 创建与填写部署公钥\n\n### 创建部署公钥\n\n```bash\nsudo -Hu www ssh-keygen -t rsa\n```\n\n> 如果创建失败首先需要创建/home/www/.ssh 这个文件夹\n\n### 查看公钥\n\n````bash\ncat /home/www/.ssh/id_rsa.pub\n```··\n\n### 添加 Hook\n\n在阿里云 code.aliyun.com 上的 profile>ssh_key 里面添加公钥\n\n## 初始化 git 项目文件夹\n\n```bash\nsudo -Hu www git clone [git地址]\n````\n\n> 这里注意, 一定要用 www 的身份状态要不后期无法自动 git pull\n\n## 自动部署脚本 (PHP)\n\n### Shell_exec\n\n在使用这个 PHP 脚本的时候我们需要用到`shell_exec`php 的原生函数, php-fpm 是默认屏蔽这个函数的, 所有需要在 php.ini 里面修改一下配置\n\n> 找到`disable_functions`这个参数, 并且在里面去掉`shell_exec`\n\n### PHP 脚本\n\n```php\n$token = 'token';\n\nif (!isset($_GET['token']) && $_GET['token'] != $token) {\n\tdie('access denied');\n}\n\n$json = json_decode(file_get_contents('php://input'), true);\n$repo = $json['repository']['name'];\n\n// 只在主分支提交时且提交数大于0执行自动部署\nif ($json['ref']=='refs/heads/master' && $json['total_commits_count']>0) {\n\t$pull_result = shell_exec('cd /to/project/path/ && git pull');\n\n\tif ($pull_result) {\n\t\t$res_log = '----------pull 成功---------------'.PHP_EOL;\n\n\t\t$res_log .= $json['user_name'] . ' 在' . date('Y-m-d H:i:s') . '向' . $json['repository']['name'] . '项目的' . $json['ref'] . '分支push了' . $json['total_commits_count'] . '个commit：' . PHP_EOL;\n\t\t$res_log .= $pull_result.PHP_EOL;\n\n\t\tfile_put_contents(\"cityconcierge-webhook-log.txt\", $res_log, FILE_APPEND);//追加写入\n\t} else {\n\t\t$res_log = '------------pull 失败-------------'.PHP_EOL;\n\n\t\t$res_log .= $json['user_name'] . ' 在' . date('Y-m-d H:i:s') . '向' . $json['repository']['name'] . '项目的' . $json['ref'] . '分支push了' . $json['total_commits_count'] . '个commit：' . PHP_EOL;\n\t\t$res_log .= $pull_result.PHP_EOL;\n\n\t\tfile_put_contents(\"cityconcierge-webhook-log.txt\", $res_log, FILE_APPEND);//追加写入\n\t}\n}\n```\n","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"运维","slug":"运维","count":1,"path":"api/categories/运维.json"}],"tags":[{"name":"Gitlab","slug":"Gitlab","count":1,"path":"api/tags/Gitlab.json"},{"name":"Webhook","slug":"Webhook","count":1,"path":"api/tags/Webhook.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E4%B8%8E%E5%A1%AB%E5%86%99%E9%83%A8%E7%BD%B2%E5%85%AC%E9%92%A5\"><span class=\"toc-text\">创建与填写部署公钥</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E9%83%A8%E7%BD%B2%E5%85%AC%E9%92%A5\"><span class=\"toc-text\">创建部署公钥</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E5%85%AC%E9%92%A5\"><span class=\"toc-text\">查看公钥</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E8%84%9A%E6%9C%AC-PHP\"><span class=\"toc-text\">自动部署脚本 (PHP)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Shell-exec\"><span class=\"toc-text\">Shell_exec</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">PHP 脚本</span></a></li></ol></li></ol>","author":{"name":"三钻","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":""},"mapped":true,"prev_post":{"title":"使用Console技巧提高JS调试技能","uid":"8c6e317d34a70d85c4a6b275416b9854","slug":"frontend/debugging-skills-console","date":"2019-10-11T15:59:19.000Z","updated":"2021-03-29T16:00:09.452Z","comments":true,"path":"api/articles/frontend/debugging-skills-console.json","keywords":null,"cover":"https://res.cloudinary.com/tridiamond/image/upload/v1571154304/blog/javascript_console_nyqvkf.jpg","text":"其实 JavaScript 给到我们很多调试工具来调试代码，那问问你自己，你又知道多少呢？用到多少呢？ 大部分前端开发在 JavaScript 调试代码的常规用法都是直接console.log，直接输出某一个变量或者返回数据里面的对象数据。当然毋庸置疑这样输出来调试是没有问题的。...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"FrontEnd","slug":"FrontEnd","count":9,"path":"api/categories/FrontEnd.json"},{"name":"Tips","slug":"FrontEnd/Tips","count":2,"path":"api/categories/FrontEnd/Tips.json"},{"name":"Debugging","slug":"FrontEnd/Tips/Debugging","count":1,"path":"api/categories/FrontEnd/Tips/Debugging.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":3,"path":"api/tags/JavaScript.json"},{"name":"Console","slug":"Console","count":1,"path":"api/tags/Console.json"},{"name":"Debugging","slug":"Debugging","count":1,"path":"api/tags/Debugging.json"}],"author":{"name":"三钻","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":""}},"next_post":{"title":"Lumen 使用 laravel passport","uid":"856e8266ee6e8a15c82abdb9b8c2a650","slug":"laravel/lumen-passport-usage","date":"2019-01-10T01:51:23.000Z","updated":"2021-03-29T16:00:09.456Z","comments":true,"path":"api/articles/laravel/lumen-passport-usage.json","keywords":null,"cover":"https://res.cloudinary.com/tridiamond/image/upload/v1571213684/blog/lumn_cover_uujop9.png","text":"Lumen是laravel的简洁版, 把laravel里面深重的依赖都去掉了, 所以直接安装laravel的passport是无法正常使用的.所以如果要在lumen上使用laravel的passport就需要安装另外一个插件. 安装要求 PHP &gt;= 5.6.3 Lumen...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"Laravel","slug":"Laravel","count":3,"path":"api/categories/Laravel.json"}],"tags":[{"name":"Laravel Passport","slug":"Laravel-Passport","count":3,"path":"api/tags/Laravel-Passport.json"},{"name":"Lumen","slug":"Lumen","count":2,"path":"api/tags/Lumen.json"}],"author":{"name":"三钻","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":""}}}